const Mesh = require("../../Components/Mesh/Mesh");
const { Vertex } = require("../../Mathf/Mathf");
const GameObject = require("../GameObject");

class Cylinder extends GameObject {
    constructor() {
        super();
        /** @type {Mesh} */
        let mesh = this.addComponent(Mesh);

        mesh.verteces = [
            new Vertex(0.041306, -1.238515, -0.799530),
            new Vertex(0.041306, 0.761485, -0.799530),
            new Vertex(0.236397, -1.238515, -0.780315),
            new Vertex(0.236397, 0.761485, -0.780315),
            new Vertex(0.423990, -1.238515, -0.723409),
            new Vertex(0.423990, 0.761485, -0.723409),
            new Vertex(0.596877, -1.238515, -0.630999),
            new Vertex(0.596877, 0.761485, -0.630999),
            new Vertex(0.748413, -1.238515, -0.506636),
            new Vertex(0.748413, 0.761485, -0.506636),
            new Vertex(0.872776, -1.238515, -0.355100),
            new Vertex(0.872776, 0.761485, -0.355100),
            new Vertex(0.965186, -1.238515, -0.182213),
            new Vertex(0.965186, 0.761485, -0.182213),
            new Vertex(1.022092, -1.238515, 0.005380),
            new Vertex(1.022092, 0.761485, 0.005380),
            new Vertex(1.041306, -1.238515, 0.200470),
            new Vertex(1.041306, 0.761485, 0.200470),
            new Vertex(1.022092, -1.238515, 0.395561),
            new Vertex(1.022092, 0.761485, 0.395561),
            new Vertex(0.965186, -1.238515, 0.583154),
            new Vertex(0.965186, 0.761485, 0.583154),
            new Vertex(0.872776, -1.238515, 0.756041),
            new Vertex(0.872776, 0.761485, 0.756041),
            new Vertex(0.748413, -1.238515, 0.907577),
            new Vertex(0.748413, 0.761485, 0.907577),
            new Vertex(0.596877, -1.238515, 1.031940),
            new Vertex(0.596877, 0.761485, 1.031940),
            new Vertex(0.423990, -1.238515, 1.124350),
            new Vertex(0.423990, 0.761485, 1.124350),
            new Vertex(0.236397, -1.238515, 1.181256),
            new Vertex(0.236397, 0.761485, 1.181256),
            new Vertex(0.041306, -1.238515, 1.200470),
            new Vertex(0.041306, 0.761485, 1.200470),
            new Vertex(-0.153784, -1.238515, 1.181256),
            new Vertex(-0.153784, 0.761485, 1.181256),
            new Vertex(-0.341377, -1.238515, 1.124350),
            new Vertex(-0.341377, 0.761485, 1.124350),
            new Vertex(-0.514264, -1.238515, 1.031940),
            new Vertex(-0.514264, 0.761485, 1.031940),
            new Vertex(-0.665801, -1.238515, 0.907577),
            new Vertex(-0.665801, 0.761485, 0.907577),
            new Vertex(-0.790164, -1.238515, 0.756040),
            new Vertex(-0.790164, 0.761485, 0.756040),
            new Vertex(-0.882573, -1.238515, 0.583153),
            new Vertex(-0.882573, 0.761485, 0.583153),
            new Vertex(-0.939479, -1.238515, 0.395560),
            new Vertex(-0.939479, 0.761485, 0.395560),
            new Vertex(-0.958694, -1.238515, 0.200469),
            new Vertex(-0.958694, 0.761485, 0.200469),
            new Vertex(-0.939479, -1.238515, 0.005379),
            new Vertex(-0.939479, 0.761485, 0.005379),
            new Vertex(-0.882573, -1.238515, -0.182214),
            new Vertex(-0.882573, 0.761485, -0.182214),
            new Vertex(-0.790162, -1.238515, -0.355101),
            new Vertex(-0.790162, 0.761485, -0.355101),
            new Vertex(-0.665799, -1.238515, -0.506637),
            new Vertex(-0.665799, 0.761485, -0.506637),
            new Vertex(-0.514263, -1.238515, -0.631000),
            new Vertex(-0.514263, 0.761485, -0.631000),
            new Vertex(-0.341376, -1.238515, -0.723410),
            new Vertex(-0.341376, 0.761485, -0.723410),
            new Vertex(-0.153782, -1.238515, -0.780315),
            new Vertex(-0.153782, 0.761485, -0.780315),
        ];

        mesh.faces = [
            [1, 2, 0],
            [3, 4, 2],
            [5, 6, 4],
            [7, 8, 6],
            [9, 10, 8],
            [11, 12, 10],
            [13, 14, 12],
            [15, 16, 14],
            [17, 18, 16],
            [19, 20, 18],
            [21, 22, 20],
            [23, 24, 22],
            [25, 26, 24],
            [27, 28, 26],
            [29, 30, 28],
            [31, 32, 30],
            [33, 34, 32],
            [35, 36, 34],
            [37, 38, 36],
            [39, 40, 38],
            [41, 42, 40],
            [43, 44, 42],
            [45, 46, 44],
            [47, 48, 46],
            [49, 50, 48],
            [51, 52, 50],
            [53, 54, 52],
            [55, 56, 54],
            [57, 58, 56],
            [59, 60, 58],
            [53, 37, 21],
            [61, 62, 60],
            [63, 0, 62],
            [14, 30, 46],
            [1, 3, 2],
            [3, 5, 4],
            [5, 7, 6],
            [7, 9, 8],
            [9, 11, 10],
            [11, 13, 12],
            [13, 15, 14],
            [15, 17, 16],
            [17, 19, 18],
            [19, 21, 20],
            [21, 23, 22],
            [23, 25, 24],
            [25, 27, 26],
            [27, 29, 28],
            [29, 31, 30],
            [31, 33, 32],
            [33, 35, 34],
            [35, 37, 36],
            [37, 39, 38],
            [39, 41, 40],
            [41, 43, 42],
            [43, 45, 44],
            [45, 47, 46],
            [47, 49, 48],
            [49, 51, 50],
            [51, 53, 52],
            [53, 55, 54],
            [55, 57, 56],
            [57, 59, 58],
            [59, 61, 60],
            [5, 3, 1],
            [1, 63, 5],
            [63, 61, 5],
            [61, 59, 57],
            [57, 55, 53],
            [53, 51, 49],
            [49, 47, 53],
            [47, 45, 53],
            [45, 43, 37],
            [43, 41, 37],
            [41, 39, 37],
            [37, 35, 33],
            [33, 31, 29],
            [29, 27, 25],
            [25, 23, 21],
            [21, 19, 17],
            [17, 15, 21],
            [15, 13, 21],
            [13, 11, 9],
            [9, 7, 5],
            [61, 57, 5],
            [57, 53, 5],
            [37, 33, 21],
            [33, 29, 21],
            [29, 25, 21],
            [13, 9, 21],
            [9, 5, 21],
            [53, 45, 37],
            [5, 53, 21],
            [61, 63, 62],
            [63, 1, 0],
            [62, 0, 2],
            [2, 4, 6],
            [6, 8, 10],
            [10, 12, 6],
            [12, 14, 6],
            [14, 16, 18],
            [18, 20, 14],
            [20, 22, 14],
            [22, 24, 30],
            [24, 26, 30],
            [26, 28, 30],
            [30, 32, 34],
            [34, 36, 38],
            [38, 40, 42],
            [42, 44, 46],
            [46, 48, 50],
            [50, 52, 54],
            [54, 56, 62],
            [56, 58, 62],
            [58, 60, 62],
            [62, 2, 6],
            [30, 34, 46],
            [34, 38, 46],
            [38, 42, 46],
            [46, 50, 62],
            [50, 54, 62],
            [62, 6, 14],
            [14, 22, 30],
            [62, 14, 46]
        ]
    }
}

module.exports = Cylinder;