{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8e7a705c1f8d6c96c9fd","webpack:///./index.js","webpack:///./src/Camera/Camera.js","webpack:///./src/Mathf/Mathf.js","webpack:///./src/Mathf/Angle.js","webpack:///./src/Mathf/Matrix4.js","webpack:///./src/Mathf/Vector3.js","webpack:///./src/Mathf/Quaternion.js","webpack:///./src/Mathf/Vertex.js","webpack:///./src/Camera/Projection.js","webpack:///./src/Camera/ScreenMatrix.js","webpack:///./src/Color/RGBA.js","webpack:///./src/Components/Mesh/Mesh.js","webpack:///./src/Render/Render.js","webpack:///./src/Components/Component.js","webpack:///./src/GameObject/GameObject.js","webpack:///./src/Mathf/Transform.js","webpack:///./src/GameObject/Primitive/Sphere.js","webpack:///./src/GameObject/Primitive/Suzanne.js","webpack:///./src/iso2d.js","webpack:///./src/Behaviour/Behaviour.js","webpack:///./src/Scene/Scene.js","webpack:///./src/System/Screen.js","webpack:///./src/Render/Bitmap.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,sBAAsB;AAC7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA2B,OAAO;AAClC;AACA,4BAA2B,OAAO;AAClC;AACA,4BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA0B,WAAW;AACrC,+BAA8B,WAAW;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,U;;;;;;ACtKA;AACA,QAAO,+BAA+B;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yB;;;;;;AC/CA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA,8BAA6B,qBAAqB;AAClD;;AAEA,gCAA+B,mBAAmB;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAgB,QAAQ;AACxB;;AAEA;;AAEA,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,0B;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,QAAQ;AACvB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;AC9EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;AClGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yB;;;;;;AC/CA,QAAO,UAAU;AACjB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;AC1BA,QAAO,UAAU;AACjB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACzDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA,iBAAgB,SAAS;AACzB;AACA;AACA;;AAEA,mBAAkB,GAAG;AACrB;AACA;AACA;;AAEA,iBAAgB,GAAG;AACnB;AACA;AACA;;AAEA,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,uB;;;;;;ACnCA;AACA,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yB;;;;;;ACZA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAkB,WAAW;AAC7B;AACA;AACA;;AAEA,iBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,4B;;;;;;AC1BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,6B;;;;;;AC/DA,QAAO,+BAA+B;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA,4B;;;;;;AC5DA;AACA,QAAO,SAAS;AAChB;;AAEA;AACA;AACA;AACA,oBAAmB,KAAK;AACxyB;;;;;;ACp7CA;AACA,QAAO,SAAS;AAChB;;AAEA;AACA;AACA;AACA,mBAAkB,KAAK;AACvr9CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,OAAO;AACzB;AACA;AACA;;AAEA,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,mBAAkB,MAAM;AACxB;AACA;AACA;;AAEA,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA,mBAAkB,OAAO;AACzB;AACA;AACA;;AAEA,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,wB;;;;;;AC7EA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,4B;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,aAAa;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAgB,WAAW;AAC3B;AACA;;AAEA;AACA;;;AAGA,mBAAkB,aAAa;AAC/B;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;AC5CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,yB;;;;;;ACbA;AACA;AACA,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,O;AACjB,kBAAiB,O;AACjB,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yB","file":"iso2d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iso2d\"] = factory();\n\telse\n\t\troot[\"iso2d\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8e7a705c1f8d6c96c9fd","const Camera = require(\"./src/Camera/Camera\");\r\nconst ScreenMatrix = require(\"./src/Camera/ScreenMatrix\");\r\nconst RGBA = require(\"./src/Color/RGBA\");\r\nconst Mesh = require(\"./src/Components/Mesh/Mesh\");\r\nconst Sphere = require(\"./src/GameObject/Primitive/Sphere\");\r\nconst Suzanne = require(\"./src/GameObject/Primitive/Suzanne\");\r\nconst iso2d = require(\"./src/iso2d\");\r\nconst Mathf = require(\"./src/Mathf/Mathf\");\r\nconst { Vector3, Quaternion } = require(\"./src/Mathf/Mathf\");\r\nconst Vertex = require(\"./src/Mathf/Vertex\");\r\nconst Bitmap = require(\"./src/Render/Bitmap\");\r\n\r\nlet game = new iso2d(document.getElementById('_CANVAS'));\r\n\r\ngame.scene.addGameObject(new Suzanne());\r\n\r\nfunction render() {\r\n\r\n    let canvas = document.createElement('canvas');\r\n    let ctx = canvas.getContext('2d');\r\n    let cam = new Camera();\r\n    let screenMatrix = new ScreenMatrix();\r\n\r\n    cam.position = new Vector3(0, 0, 60)\r\n\r\n    let screen = {\r\n        x: document.body.clientWidth,\r\n        y: document.body.clientHeight\r\n    }\r\n\r\n    canvas.width = screen.x;\r\n    canvas.height = screen.y;\r\n    document.body.appendChild(canvas);\r\n\r\n    let light = new Vector3(2, 2, 1);\r\n    let lightCache = new Vector3(0, 0, 0);\r\n    let lightPoint = new Sphere();\r\n\r\n    lightPoint.transform.scale = new Vector3(0.05, 0.05, 0.05)\r\n    lightPoint.transform.position = light;\r\n\r\n    game.scene.addGameObject(lightPoint);\r\n    game.scene.addGameObject(new Suzanne)\r\n\r\n    let zBuffer = new Array(screen.x * screen.y);\r\n    let angle = 0;\r\n\r\n\r\n    setInterval(function () {\r\n        for (let i = 0; i < zBuffer.length; i++) {\r\n            zBuffer[i] = Number.NEGATIVE_INFINITY;\r\n        }\r\n\r\n        let bitmap = new Bitmap(ctx.createImageData(screen.x, screen.y))\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        let camM = cam.getMatrix();\r\n\r\n        lightCache = light.normalize();\r\n\r\n        angle += 0.3;\r\n\r\n        for (let gameObject of game.scene.allGameObjects()) {\r\n            gameObject.transform.rotation = Quaternion.fromVector(new Vector3(0,1,0), Mathf.Angle.degreesToRadians(angle))\r\n\r\n            let gameObjectM = gameObject.transform.getMatrix();\r\n            let mesh = gameObject.getComponent(Mesh);\r\n\r\n            for (let face of mesh.faces) {\r\n                /** @type {Vertex} */\r\n                let v1 = mesh.verteces[face[0]];\r\n                /** @type {Vertex} */\r\n                let v2 = mesh.verteces[face[1]];\r\n                /** @type {Vertex} */\r\n                let v3 = mesh.verteces[face[2]];\r\n\r\n                v1 = v1.multiplyOnMatrix(gameObjectM)\r\n                v2 = v2.multiplyOnMatrix(gameObjectM)\r\n                v3 = v3.multiplyOnMatrix(gameObjectM)\r\n\r\n\r\n                let normal = new Vector3();\r\n                let line1 = new Vector3();\r\n                let line2 = new Vector3();\r\n                let l = 0;\r\n\r\n                line1.x = v2.x - v1.x\r\n                line1.y = v2.y - v1.y\r\n                line1.z = v2.z - v1.z\r\n\r\n                line2.x = v3.x - v1.x\r\n                line2.y = v3.y - v1.y\r\n                line2.z = v3.z - v1.z\r\n\r\n                normal.x = line1.y * line2.z - line1.z * line2.y;\r\n                normal.y = line1.z * line2.x - line1.x * line2.z;\r\n                normal.z = line1.x * line2.y - line1.y * line2.x;\r\n\r\n                l = Math.sqrt(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);\r\n\r\n                normal.x /= l;\r\n                normal.y /= l;\r\n                normal.z /= l;\r\n\r\n                v1 = v1.multiplyOnMatrix(camM)\r\n                    .multiplyOnMatrix(cam.projection)\r\n                    .normal()\r\n                v2 = v2.multiplyOnMatrix(camM)\r\n                    .multiplyOnMatrix(cam.projection)\r\n                    .normal()\r\n                v3 = v3.multiplyOnMatrix(camM)\r\n                    .multiplyOnMatrix(cam.projection)\r\n                    .normal()\r\n\r\n                if (v1.x < -1 || v1.x > 1 || v1.y < -1 || v1.y > 1 || v1.z < 0) {\r\n                    continue;\r\n                }\r\n                if (v2.x < -1 || v2.x > 1 || v2.y < -1 || v2.y > 1 || v3.z < 0) {\r\n                    continue;\r\n                }\r\n\r\n                if (v3.x < -1 || v3.x > 1 || v3.y < -1 || v3.y > 1 || v3.z < 0) {\r\n                    continue;\r\n                }\r\n\r\n                v1 = v1.multiplyOnMatrix(screenMatrix);\r\n                v2 = v2.multiplyOnMatrix(screenMatrix);\r\n                v3 = v3.multiplyOnMatrix(screenMatrix);\r\n\r\n                _triangle(v1, v2, v3, bitmap, gameObject.color, normal);\r\n            }\r\n        }\r\n\r\n        ctx.putImageData(bitmap.bitmap, 0, 0);\r\n    }, 1000 / 30)\r\n\r\n    const _triangle = (v1, v2, v3, bitmap, color, normal) => {\r\n        let minX = Math.max(0, Math.ceil(Math.min(v1.x, Math.min(v2.x, v3.x))));\r\n        let maxX = Math.min(screen.x - 1, Math.floor(Math.max(v1.x, Math.max(v2.x, v3.x))));\r\n        let minY = Math.max(0, Math.ceil(Math.min(v1.y, Math.min(v2.y, v3.y))));\r\n        let maxY = Math.min(screen.y - 1, Math.floor(Math.max(v1.y, Math.max(v2.y, v3.y))));\r\n\r\n        let triangleArea = (v1.y - v3.y) * (v2.x - v3.x) + (v2.y - v3.y) * (v3.x - v1.x);\r\n        let dp = normal.x * lightCache.x + normal.y * lightCache.y + normal.z * lightCache.z;\r\n\r\n        for (let y = minY; y <= maxY; y++) {\r\n            for (let x = minX; x <= maxX; x++) {\r\n                let b1 = ((y - v3.y) * (v2.x - v3.x) + (v2.y - v3.y) * (v3.x - x)) / triangleArea;\r\n                let b2 = ((y - v1.y) * (v3.x - v1.x) + (v3.y - v1.y) * (v1.x - x)) / triangleArea;\r\n                let b3 = ((y - v2.y) * (v1.x - v2.x) + (v1.y - v2.y) * (v2.x - x)) / triangleArea;\r\n\r\n                if (b1 >= 0 && b1 <= 1 && b2 >= 0 && b2 <= 1 && b3 >= 0 && b3 <= 1) {\r\n                    let depth = b1 * v1.z + b2 * v2.z + b3 * v3.z;\r\n                    let index = y * screen.x + x;\r\n\r\n                    if (zBuffer[index] < depth) {\r\n                        zBuffer[index] = depth;\r\n                        bitmap.set(x, y, RGBA.multiply(color, dp));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nrender();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","const Mathf = require(\"../Mathf/Mathf\");\nconst { Vector3, Matrix4, Quaternion } = require(\"../Mathf/Mathf\");\nconst Projection = require(\"./Projection\");\n\nclass Camera {\n    constructor(core) {\n        this._core = core;\n        this._position = new Vector3(0, 0, 0, 1);\n        this._forward = new Vector3(0, 0, 1, 1);\n        this._up = new Vector3(0, 1, 0, 1);\n        this._right = new Vector3(1, 0, 0, 1);\n        this._near = 0.1;\n        this._far = 100;\n        this._h_fov = Mathf.Angle.degreesToRadians(120);\n        this._v_fov = this._h_fov * (document.body.clientHeight / document.body.clientWidth);\n\n        this.rotation = Quaternion.fromVector(new Vector3(0, 0, 0), 0);\n\n        this.projection = new Projection(this);\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(v) {\n        this._position = v;\n    }\n\n    getMatrix() {\n        return this.rotationMatrix().multiply(this.positionMatrix());\n    }\n\n    positionMatrix() {\n        return new Matrix4([\n            [1, 0, 0, this._position.x],\n            [0, 1, 0, this._position.y],\n            [0, 0, 1, this._position.z],\n            [0, 0, 0, 1],\n        ])\n    }\n\n    rotationMatrix() {\n        return this.rotation.toMatrix4();\n    }\n}\n\nmodule.exports = Camera;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Camera/Camera.js\n// module id = 1\n// module chunks = 0","const Angle = require(\"./Angle\");\nconst Matrix4 = require(\"./Matrix4\");\nconst Quaternion = require(\"./Quaternion\");\nconst Vector3 = require(\"./Vector3\");\nconst Vertex = require(\"./Vertex\");\n\nclass Mathf {}\n\nMathf.Vector3 = Vector3;\nMathf.Matrix4 = Matrix4;\nMathf.Angle = Angle;\nMathf.Quaternion = Quaternion;\nMathf.Vertex = Vertex;\n\nmodule.exports = Mathf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Mathf.js\n// module id = 2\n// module chunks = 0","class Angle {\n    static degreesToRadians(a) {\n        return a * (Math.PI / 180);\n    }\n    static radiansToDegrees(a) {\n        return a / (Math.PI / 180);\n    }\n}\n\nmodule.exports = Angle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Angle.js\n// module id = 3\n// module chunks = 0","const Vector3 = require(\"./Vector3\");\n\nclass Matrix4 {\n    constructor(m) {\n        this.e = m || [\n            [1, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 0, 1, 0],\n            [0, 0, 0, 1]\n        ]\n    }\n\n    /**\n     * \n     * @param {Matrix4} m \n     */\n    multiply(M) {\n        let A = this.e;\n        let B = M.e;\n        let m = [];\n        for (let row = 0; row < A.length; row++) {\n            let newRow = [];\n            for (let col = 0; col < B[row].length; col++) {\n                let dot = 0;\n\n                for (let i = 0; i < A[row].length; i++) {\n                    dot += A[row][i] * B[i][col];\n                }\n\n                newRow.push(dot);\n            }\n            m.push(newRow);\n        }\n\n        return new Matrix4(m);\n    }\n\n    /** @param {Matrix4} M */\n    multiplyOfMatrix(M) {\n\n    }\n\n    /** @param {Matrix4[]} list */\n    multiplyArrayOfMatrices(list) {\n        let m = this;\n        for (let matrix of list) {\n            m = m.multiply(matrix);\n        }\n\n        return m;\n    }\n\n    /**\n     * @param {Vector3} v \n     */\n    multipleOnVector(v) {\n        let e = this.e;\n\n        return new Vector3(\n            e[0][0] * v.x + e[0][1] * v.y + e[0][2] * v.z + e[0][3] * v.w,\n            e[1][0] * v.x + e[1][1] * v.y + e[1][2] * v.z + e[1][3] * v.w,\n            e[2][0] * v.x + e[2][1] * v.y + e[2][2] * v.z + e[2][3] * v.w,\n            e[3][0] * v.x + e[3][1] * v.y + e[3][2] * v.z + e[3][3] * v.w\n        )\n    }\n}\n\n\nmodule.exports = Matrix4;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Matrix4.js\n// module id = 4\n// module chunks = 0","class Vector3 {\n    constructor(x, y, z, w) {\n        this._x = x || 0.0;\n        this._y = y || 0.0;\n        this._z = z || 0.0;\n        this._w = w || 0.0;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get x() {\n        return this._x;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get y() {\n        return this._y;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get z() {\n        return this._z;\n    }\n\n    set x(x) {\n        this._x = x;\n    }\n\n    set y(y) {\n        this._y = y;\n    }\n\n    set z(z) {\n        this._z = z;\n    }\n\n    get w () {\n        this._w;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    length() {\n        return Vector3.length(this);\n    }\n\n    /**\n     * @returns {Vector3};\n     */\n    normalize() {\n        return Vector3.normalize(this);\n    }\n\n    /**\n     * @param {Vector3} v \n     * \n     * @returns {Number}\n     */\n    static length(v) {\n        return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z)\n    }\n\n    /**\n     * @param {Vector3} v \n     * @returns {Vector3}\n     */\n    static normalize(v) {\n        let len = v.length();\n        return new Vector3(v.x / len, v.y / len, v.z / len);\n    }\n}\n\nmodule.exports = Vector3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Vector3.js\n// module id = 5\n// module chunks = 0","const Matrix4 = require(\"./Matrix4\");\nconst Vector3 = require(\"./Vector3\");\n\nclass Quaternion {\n    constructor(x, y, z, w) {\n        this._x = x || 0;\n        this._y = y || 0;\n        this._z = z || 0;\n        this._w = w || 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set x(x) {\n        this._x = x;\n    }\n\n    set y(y) {\n        this._y = y;\n    }\n\n    set z(z) {\n        this._z = z;\n    }\n\n    set w(w) {\n        this._w = w;\n    }\n\n    toMatrix4() {\n        let w = this.w;\n        let x = this.x;\n        let y = this.y;\n        let z = this.z;\n\n        let n = w * w + x * x + y * y + z * z;\n        let s = n === 0 ? 0 : 2 / n;\n        let wx = s * w * x, wy = s * w * y, wz = s * w * z;\n        let xx = s * x * x, xy = s * x * y, xz = s * x * z;\n        let yy = s * y * y, yz = s * y * z, zz = s * z * z;\n\n        return new Matrix4([\n            [1 - (yy + zz), xy - wz, xz + wy, 0],\n            [xy + wz, 1 - (xx + zz), yz - wx, 0],\n            [xz - wy, yz + wx, 1 - (xx + yy), 0],\n            [0, 0, 0, 1]]\n        );\n    }\n\n    /**\n     * \n     * @param {Quaternion} q \n     */\n    multiple(q) {\n        var w1 = this.w;\n        var x1 = this.x;\n        var y1 = this.y;\n        var z1 = this.z;\n\n        var w2 = q.w;\n        var x2 = q.x;\n        var y2 = q.y;\n        var z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 + y1 * w2 + z1 * x2 - x1 * z2,\n            w1 * z2 + z1 * w2 + x1 * y2 - y1 * x2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2\n        );\n    }\n\n    /**\n     * @param {Vector3} v \n     * @param {Number} a \n     */\n    static fromVector(v, a) {\n        v = v.normalize();\n        let sin = Math.sin(a / 2);\n        let cos = Math.cos(a / 2);\n        return new Quaternion(sin * v.x, sin * v.y, sin * v.z, cos)\n    }\n}\n\nmodule.exports = Quaternion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Quaternion.js\n// module id = 6\n// module chunks = 0","const Matrix4 = require(\"./Matrix4\");\r\n\r\nclass Vertex {\r\n    constructor(x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w || 1;\r\n    }\r\n\r\n    /** \r\n     * @param {Matrix4} M\r\n     * @returns {Vertex}\r\n     */\r\n    multiplyOnMatrix(M) {\r\n        let e = M.e;\r\n\r\n        return new Vertex(\r\n            e[0][0] * this.x + e[0][1] * this.y + e[0][2] * this.z + e[0][3] * this.w,\r\n            e[1][0] * this.x + e[1][1] * this.y + e[1][2] * this.z + e[1][3] * this.w,\r\n            e[2][0] * this.x + e[2][1] * this.y + e[2][2] * this.z + e[2][3] * this.w,\r\n            e[3][0] * this.x + e[3][1] * this.y + e[3][2] * this.z + e[3][3] * this.w\r\n        )\r\n    }\r\n    normal() {\r\n        return new Vertex(\r\n            this.x / this.w,\r\n            this.y / this.w,\r\n            this.z / this.w,\r\n            this.w / this.w\r\n        )\r\n    }\r\n\r\n    pluseVertex(v) {\r\n        return new Vertex(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n\r\n    minusVertex(v) {\r\n        return new Vertex(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n\r\n    multiplyNumber(n) {\r\n        return new Vertex(this.x * n, this.y * n, this.z * n);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Vertex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Vertex.js\n// module id = 7\n// module chunks = 0","const { Matrix4 } = require(\"../Mathf/Mathf\");\r\nconst Camera = require(\"./Camera\");\r\n\r\nclass Projection {\r\n    /**\r\n     * \r\n     * @param {Camera} camera \r\n     */\r\n    constructor(camera) {\r\n        let near = camera.near || 0.1;\r\n        let far = camera.far || 100;\r\n\r\n        let m00 = document.body.clientHeight / document.body.clientWidth;\r\n        let m11 = 1 / Math.tan(90 * 0.5 * Math.PI / 180);\r\n        let m22 = -far / (far - near);\r\n        let m32 = -far * near / (far - near);\r\n\r\n        return new Matrix4([\r\n            [m00, 0, 0, 0],\r\n            [0, m11, 0, 0],\r\n            [0, 0, m22, 1],\r\n            [0, 0, m32, 0],\r\n        ])\r\n    }\r\n}\r\n\r\nmodule.exports = Projection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Camera/Projection.js\n// module id = 8\n// module chunks = 0","const { Matrix4 } = require(\"../Mathf/Mathf\");\r\nconst Camera = require(\"./Camera\");\r\n\r\nclass ScreenMatrix {\r\n    /**\r\n     * \r\n     * @param {Camera} camera \r\n     */\r\n    constructor(camera) {\r\n        return new Matrix4([\r\n            [document.body.clientWidth / 2, 0, 0, document.body.clientWidth / 2],\r\n            [0, document.body.clientHeight / 2, 0, document.body.clientHeight / 2],\r\n            [0, 0, 1, 0],\r\n            [0, 0, 0, 1],\r\n        ])\r\n    }\r\n}\r\n\r\nmodule.exports = ScreenMatrix;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Camera/ScreenMatrix.js\n// module id = 9\n// module chunks = 0","class RGBA {\n    constructor(r, g, b, a) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a;\n    }\n\n    get r() {\n        return this._r;\n    }\n\n    get g() {\n        return this._g;\n    }\n\n    get b() {\n        return this._b;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set r(v) {\n        this._r = v;\n        return this;\n    }\n\n    set g(v) {\n        this._g = v;\n        return this;\n    }\n\n    set b(v) {\n        this._b = v;\n        return this;\n    }\n\n    set a(v) {\n        this._a = v;\n        return this;\n    }\n\n    multiply(v) {\n        this.r *= v;\n        this.g *= v;\n        this.b *= v;\n\n        return this;\n    }\n\n    static multiply(color, v) {\n        return new RGBA(color.r * v, color.g * v, color.b * v, color.a)\n    }\n}\n\nmodule.exports = RGBA;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Color/RGBA.js\n// module id = 10\n// module chunks = 0","const Render = require(\"../../Render/Render\");\nconst Component = require(\"../Component\");\n\nclass Mesh extends Component {\n    constructor() {\n        super();\n        this._verteces = [];\n        this._faces = [];\n    }\n\n    /** @returns {Vertex[]} */\n    get verteces() {\n        return this._verteces;\n    }\n\n    /** @param {Vertex[]} v */\n    set verteces(v) {\n        this._verteces = v;\n    }\n\n    /** @returns {[]} */\n    get faces() {\n        return this._faces;\n    }\n\n    /** @param {[]} f */\n    set faces(f) {\n        this._faces = f;\n    }\n\n    /** @param {Render} render */\n    onDraw(render) {\n    }\n}\n\nmodule.exports = Mesh;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Components/Mesh/Mesh.js\n// module id = 11\n// module chunks = 0","class Render {\n    /** @param {iso2d} core */\n    constructor(core) {\n        this._core = core;\n        this._canvas = core.canvas;\n        this._verteces = [];\n    }\n\n    pushVerteces(verteces) {\n    }\n}\n\nmodule.exports = Render;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Render/Render.js\n// module id = 12\n// module chunks = 0","const GameObject = require(\"../GameObject/GameObject\");\n\nclass Component {\n    constructor () {\n        this._gameObject = null;\n    }\n\n    /** @returns {GameObject} */\n    get gameObject () {\n        return this._gameObject;\n    }\n\n    /** @param {GameObject} gameObject */\n    set gameObject (gameObject) {\n        this._gameObject = gameObject;\n    }\n\n    onUpdate() {\n\n    }\n\n    onDraw() {\n        \n    }\n}\n\nmodule.exports = Component;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Components/Component.js\n// module id = 13\n// module chunks = 0","const RGBA = require(\"../Color/RGBA\");\nconst Component = require(\"../Components/Component\");\nconst Transform = require(\"../Mathf/Transform\");\n\nclass GameObject {\n    constructor() {\n        this.tag = null;\n        this.components = new Map();\n        this.transform = new Transform();\n        this.shadow = true;\n        this.color = new RGBA(255, 255, 255, 255);\n    }\n\n    /**\n     * \n     * @param {Component} component \n     */\n    addComponent(component) {\n        let name = component.name;\n        component = new component();\n        component.gameObject = this;\n\n        this.components.set(name, component);\n        return this.components.get(name);\n    }\n\n    /**\n     * @returns {Component}\n     */\n    getComponent(component) {\n        return this.components.get(component.name);\n    }\n\n    /**\n     * @returns {Component[]}\n     */\n    allComponents() {\n        return this.components.values();\n    }\n\n    onStart() {\n\n    }\n\n    onUpdate() {\n\n    }\n\n    onDraw(render) {\n        for (let component of this.components.values()) {\n            component.onDraw(render);\n        }\n    }\n\n    start() {\n\n    }\n\n    update() {\n\n    }\n}\n\nmodule.exports = GameObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GameObject/GameObject.js\n// module id = 14\n// module chunks = 0","const { Vector3, Quaternion, Matrix4 } = require(\"./Mathf\");\n\nclass Transform {\n    constructor() {\n        this._position = new Vector3(0, 0, 0);\n        this._scale = new Vector3(1, 1, 1)\n        this._rotation = new Quaternion();\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(v) {\n        this._position = v;\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(q) {\n        this._rotation = q;\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale(v) {\n        this._scale = v;\n    }\n\n    getMatrix() {\n        return new Matrix4().multiplyArrayOfMatrices([\n            new Matrix4([\n                [1, 0, 0, this.position.x],\n                [0, 1, 0, this.position.y],\n                [0, 0, 1, this.position.z],\n                [0, 0, 0, 1]\n            ]),\n            this.rotation.toMatrix4(),\n            \n            new Matrix4([\n                [this.scale.x, 0, 0, 0],\n                [0, this.scale.y, 0, 0],\n                [0, 0, this.scale.z, 0],\n                [0, 0, 0, 1]\n            ]),\n            \n        ])\n\n    }\n\n    /** @param {Quaternion} q */\n    rotate(q) {\n        this.rotation = this.rotation.multiple(q);\n    }\n}\n\nmodule.exports = Transform;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Mathf/Transform.js\n// module id = 15\n// module chunks = 0","const Mesh = require(\"../../Components/Mesh/Mesh\");\nconst { Vertex } = require(\"../../Mathf/Mathf\");\nconst GameObject = require(\"../GameObject\");\n\nclass Sphere extends GameObject {\n    constructor() {\n        super();\n        /** @type {Mesh} */\n        let mesh = this.addComponent(Mesh);\n\n        mesh.verteces = [\n            new Vertex(0.000000, 0.980785, -0.195090),\n            new Vertex(0.000000, 0.923880, -0.382683),\n            new Vertex(0.000000, 0.831470, -0.555570),\n            new Vertex(0.000000, 0.707107, -0.707107),\n            new Vertex(0.000000, 0.555570, -0.831470),\n            new Vertex(0.000000, 0.382683, -0.923880),\n            new Vertex(0.000000, 0.195090, -0.980785),\n            new Vertex(0.000000, 0.000000, -1.000000),\n            new Vertex(0.000000, -0.195090, -0.980785),\n            new Vertex(0.000000, -0.831470, -0.555570),\n            new Vertex(0.038060, 0.980785, -0.191342),\n            new Vertex(0.074658, 0.923880, -0.375330),\n            new Vertex(0.108386, 0.831470, -0.544895),\n            new Vertex(0.137950, 0.707107, -0.693520),\n            new Vertex(0.162212, 0.555570, -0.815493),\n            new Vertex(0.180240, 0.382683, -0.906127),\n            new Vertex(0.191342, 0.195090, -0.961940),\n            new Vertex(0.195090, 0.000000, -0.980785),\n            new Vertex(0.191342, -0.195090, -0.961940),\n            new Vertex(0.180240, -0.382683, -0.906127),\n            new Vertex(0.162212, -0.555570, -0.815493),\n            new Vertex(0.137950, -0.707107, -0.693520),\n            new Vertex(0.108386, -0.831470, -0.544895),\n            new Vertex(0.074658, -0.923880, -0.375330),\n            new Vertex(0.038060, -0.980785, -0.191341),\n            new Vertex(0.074658, 0.980785, -0.180240),\n            new Vertex(0.146447, 0.923880, -0.353553),\n            new Vertex(0.212608, 0.831470, -0.513280),\n            new Vertex(0.270598, 0.707107, -0.653281),\n            new Vertex(0.318190, 0.555570, -0.768178),\n            new Vertex(0.353553, 0.382683, -0.853553),\n            new Vertex(0.375330, 0.195090, -0.906127),\n            new Vertex(0.382684, 0.000000, -0.923879),\n            new Vertex(0.375330, -0.195090, -0.906127),\n            new Vertex(0.353554, -0.382683, -0.853553),\n            new Vertex(0.318190, -0.555570, -0.768178),\n            new Vertex(0.270598, -0.707107, -0.653281),\n            new Vertex(0.212608, -0.831470, -0.513280),\n            new Vertex(0.146447, -0.923880, -0.353553),\n            new Vertex(0.074658, -0.980785, -0.180240),\n            new Vertex(0.108387, 0.980785, -0.162212),\n            new Vertex(0.212608, 0.923880, -0.318190),\n            new Vertex(0.308658, 0.831470, -0.461940),\n            new Vertex(0.392848, 0.707107, -0.587938),\n            new Vertex(0.461940, 0.555570, -0.691342),\n            new Vertex(0.513280, 0.382683, -0.768178),\n            new Vertex(0.544895, 0.195090, -0.815493),\n            new Vertex(0.555570, 0.000000, -0.831469),\n            new Vertex(0.544895, -0.195090, -0.815493),\n            new Vertex(0.513280, -0.382683, -0.768178),\n            new Vertex(0.461940, -0.555570, -0.691342),\n            new Vertex(0.392848, -0.707107, -0.587938),\n            new Vertex(0.308658, -0.831470, -0.461940),\n            new Vertex(0.212608, -0.923880, -0.318189),\n            new Vertex(0.108386, -0.980785, -0.162211),\n            new Vertex(0.137950, 0.980785, -0.137950),\n            new Vertex(0.270598, 0.923880, -0.270598),\n            new Vertex(0.392848, 0.831470, -0.392847),\n            new Vertex(0.500000, 0.707107, -0.500000),\n            new Vertex(0.587938, 0.555570, -0.587938),\n            new Vertex(0.653282, 0.382683, -0.653281),\n            new Vertex(0.693520, 0.195090, -0.693520),\n            new Vertex(0.707107, 0.000000, -0.707107),\n            new Vertex(0.693520, -0.195090, -0.693520),\n            new Vertex(0.653282, -0.382683, -0.653281),\n            new Vertex(0.587938, -0.555570, -0.587938),\n            new Vertex(0.500000, -0.707107, -0.500000),\n            new Vertex(0.392848, -0.831470, -0.392847),\n            new Vertex(0.270598, -0.923880, -0.270598),\n            new Vertex(0.137950, -0.980785, -0.137949),\n            new Vertex(0.162212, 0.980785, -0.108386),\n            new Vertex(0.318190, 0.923880, -0.212607),\n            new Vertex(0.461940, 0.831470, -0.308658),\n            new Vertex(0.587938, 0.707107, -0.392847),\n            new Vertex(0.691342, 0.555570, -0.461940),\n            new Vertex(0.768178, 0.382683, -0.513280),\n            new Vertex(0.815493, 0.195090, -0.544895),\n            new Vertex(0.831470, 0.000000, -0.555570),\n            new Vertex(0.815493, -0.195090, -0.544895),\n            new Vertex(0.768178, -0.382683, -0.513280),\n            new Vertex(0.691342, -0.555570, -0.461940),\n            new Vertex(0.587938, -0.707107, -0.392847),\n            new Vertex(0.461940, -0.831470, -0.308658),\n            new Vertex(0.318190, -0.923880, -0.212607),\n            new Vertex(0.162212, -0.980785, -0.108386),\n            new Vertex(0.180240, 0.980785, -0.074658),\n            new Vertex(0.353554, 0.923880, -0.146446),\n            new Vertex(0.513280, 0.831470, -0.212607),\n            new Vertex(0.653282, 0.707107, -0.270598),\n            new Vertex(0.768178, 0.555570, -0.318189),\n            new Vertex(0.853554, 0.382683, -0.353553),\n            new Vertex(0.906128, 0.195090, -0.375330),\n            new Vertex(0.923880, 0.000000, -0.382683),\n            new Vertex(0.906128, -0.195090, -0.375330),\n            new Vertex(0.853554, -0.382683, -0.353553),\n            new Vertex(0.768178, -0.555570, -0.318189),\n            new Vertex(0.653282, -0.707107, -0.270598),\n            new Vertex(0.513280, -0.831470, -0.212607),\n            new Vertex(0.353554, -0.923880, -0.146446),\n            new Vertex(0.180240, -0.980785, -0.074658),\n            new Vertex(0.191342, 0.980785, -0.038060),\n            new Vertex(0.375331, 0.923880, -0.074658),\n            new Vertex(0.544895, 0.831470, -0.108386),\n            new Vertex(0.693520, 0.707107, -0.137949),\n            new Vertex(0.815493, 0.555570, -0.162211),\n            new Vertex(0.906128, 0.382683, -0.180240),\n            new Vertex(0.961940, 0.195090, -0.191341),\n            new Vertex(0.980785, 0.000000, -0.195090),\n            new Vertex(0.961940, -0.195090, -0.191341),\n            new Vertex(0.906128, -0.382683, -0.180240),\n            new Vertex(0.815493, -0.555570, -0.162211),\n            new Vertex(0.693520, -0.707107, -0.137949),\n            new Vertex(0.544895, -0.831470, -0.108386),\n            new Vertex(0.375330, -0.923880, -0.074658),\n            new Vertex(0.191342, -0.980785, -0.038060),\n            new Vertex(0.195091, 0.980785, 0.000000),\n            new Vertex(0.382684, 0.923880, 0.000000),\n            new Vertex(0.555570, 0.831470, 0.000000),\n            new Vertex(0.707107, 0.707107, 0.000000),\n            new Vertex(0.831470, 0.555570, 0.000000),\n            new Vertex(0.923880, 0.382683, 0.000000),\n            new Vertex(0.980785, 0.195090, 0.000000),\n            new Vertex(1.000000, 0.000000, 0.000000),\n            new Vertex(0.980785, -0.195090, 0.000000),\n            new Vertex(0.923880, -0.382683, 0.000000),\n            new Vertex(0.831470, -0.555570, 0.000000),\n            new Vertex(0.707107, -0.707107, 0.000000),\n            new Vertex(0.555570, -0.831470, 0.000000),\n            new Vertex(0.382684, -0.923880, 0.000000),\n            new Vertex(0.195090, -0.980785, 0.000000),\n            new Vertex(0.191342, 0.980785, 0.038061),\n            new Vertex(0.375331, 0.923880, 0.074658),\n            new Vertex(0.544895, 0.831470, 0.108387),\n            new Vertex(0.693520, 0.707107, 0.137950),\n            new Vertex(0.815493, 0.555570, 0.162212),\n            new Vertex(0.906128, 0.382683, 0.180240),\n            new Vertex(0.961940, 0.195090, 0.191342),\n            new Vertex(0.980785, 0.000000, 0.195091),\n            new Vertex(0.961940, -0.195090, 0.191342),\n            new Vertex(0.906128, -0.382683, 0.180240),\n            new Vertex(0.815493, -0.555570, 0.162212),\n            new Vertex(0.693520, -0.707107, 0.137950),\n            new Vertex(0.544895, -0.831470, 0.108387),\n            new Vertex(0.375330, -0.923880, 0.074658),\n            new Vertex(0.191342, -0.980785, 0.038061),\n            new Vertex(0.180240, 0.980785, 0.074658),\n            new Vertex(0.353554, 0.923880, 0.146447),\n            new Vertex(0.513280, 0.831470, 0.212608),\n            new Vertex(0.653282, 0.707107, 0.270598),\n            new Vertex(0.768178, 0.555570, 0.318190),\n            new Vertex(0.853554, 0.382683, 0.353554),\n            new Vertex(0.906127, 0.195090, 0.375331),\n            new Vertex(0.923880, 0.000000, 0.382684),\n            new Vertex(0.906127, -0.195090, 0.375331),\n            new Vertex(0.853554, -0.382683, 0.353554),\n            new Vertex(0.768178, -0.555570, 0.318190),\n            new Vertex(0.653282, -0.707107, 0.270598),\n            new Vertex(0.513280, -0.831470, 0.212608),\n            new Vertex(0.353553, -0.923880, 0.146447),\n            new Vertex(0.180240, -0.980785, 0.074658),\n            new Vertex(0.162212, 0.980785, 0.108387),\n            new Vertex(0.318190, 0.923880, 0.212608),\n            new Vertex(0.461940, 0.831470, 0.308659),\n            new Vertex(0.587938, 0.707107, 0.392848),\n            new Vertex(0.691342, 0.555570, 0.461940),\n            new Vertex(0.768178, 0.382683, 0.513280),\n            new Vertex(0.815493, 0.195090, 0.544895),\n            new Vertex(0.831470, 0.000000, 0.555571),\n            new Vertex(0.815493, -0.195090, 0.544895),\n            new Vertex(0.768178, -0.382683, 0.513280),\n            new Vertex(0.691342, -0.555570, 0.461940),\n            new Vertex(0.587938, -0.707107, 0.392848),\n            new Vertex(0.461940, -0.831470, 0.308659),\n            new Vertex(0.318190, -0.923880, 0.212608),\n            new Vertex(0.162212, -0.980785, 0.108387),\n            new Vertex(0.137950, 0.980785, 0.137950),\n            new Vertex(0.270598, 0.923880, 0.270599),\n            new Vertex(0.392848, 0.831470, 0.392848),\n            new Vertex(0.500000, 0.707107, 0.500000),\n            new Vertex(0.587938, 0.555570, 0.587938),\n            new Vertex(0.653282, 0.382683, 0.653282),\n            new Vertex(0.693520, 0.195090, 0.693520),\n            new Vertex(0.707107, 0.000000, 0.707107),\n            new Vertex(0.693520, -0.195090, 0.693520),\n            new Vertex(0.653282, -0.382683, 0.653282),\n            new Vertex(0.587938, -0.555570, 0.587938),\n            new Vertex(0.500000, -0.707107, 0.500000),\n            new Vertex(0.392848, -0.831470, 0.392848),\n            new Vertex(0.270598, -0.923880, 0.270598),\n            new Vertex(0.137950, -0.980785, 0.137950),\n            new Vertex(0.108386, 0.980785, 0.162212),\n            new Vertex(0.212608, 0.923880, 0.318190),\n            new Vertex(0.308658, 0.831470, 0.461940),\n            new Vertex(0.392848, 0.707107, 0.587938),\n            new Vertex(0.461940, 0.555570, 0.691342),\n            new Vertex(0.513280, 0.382683, 0.768178),\n            new Vertex(0.544895, 0.195090, 0.815493),\n            new Vertex(0.555570, 0.000000, 0.831470),\n            new Vertex(0.544895, -0.195090, 0.815493),\n            new Vertex(0.513280, -0.382683, 0.768178),\n            new Vertex(0.461940, -0.555570, 0.691342),\n            new Vertex(0.392848, -0.707107, 0.587938),\n            new Vertex(0.308658, -0.831470, 0.461940),\n            new Vertex(0.212608, -0.923880, 0.318190),\n            new Vertex(0.108386, -0.980785, 0.162212),\n            new Vertex(0.000000, -1.000000, 0.000000),\n            new Vertex(0.074658, 0.980785, 0.180240),\n            new Vertex(0.146447, 0.923880, 0.353554),\n            new Vertex(0.212608, 0.831470, 0.513280),\n            new Vertex(0.270598, 0.707107, 0.653282),\n            new Vertex(0.318190, 0.555570, 0.768178),\n            new Vertex(0.353553, 0.382683, 0.853554),\n            new Vertex(0.375330, 0.195090, 0.906128),\n            new Vertex(0.382683, 0.000000, 0.923880),\n            new Vertex(0.375330, -0.195090, 0.906128),\n            new Vertex(0.353553, -0.382683, 0.853554),\n            new Vertex(0.318190, -0.555570, 0.768178),\n            new Vertex(0.270598, -0.707107, 0.653282),\n            new Vertex(0.212608, -0.831470, 0.513280),\n            new Vertex(0.146447, -0.923880, 0.353554),\n            new Vertex(0.074658, -0.980785, 0.180240),\n            new Vertex(0.038060, 0.980785, 0.191342),\n            new Vertex(0.074658, 0.923880, 0.375331),\n            new Vertex(0.108386, 0.831470, 0.544896),\n            new Vertex(0.137950, 0.707107, 0.693520),\n            new Vertex(0.162212, 0.555570, 0.815493),\n            new Vertex(0.180240, 0.382683, 0.906128),\n            new Vertex(0.191342, 0.195090, 0.961940),\n            new Vertex(0.195090, 0.000000, 0.980786),\n            new Vertex(0.191342, -0.195090, 0.961940),\n            new Vertex(0.180240, -0.382683, 0.906128),\n            new Vertex(0.162212, -0.555570, 0.815493),\n            new Vertex(0.137950, -0.707107, 0.693520),\n            new Vertex(0.108386, -0.831470, 0.544895),\n            new Vertex(0.074658, -0.923880, 0.375331),\n            new Vertex(0.038060, -0.980785, 0.191342),\n            new Vertex(-0.000000, 0.980785, 0.195091),\n            new Vertex(0.000000, 0.923880, 0.382684),\n            new Vertex(0.000000, 0.831470, 0.555571),\n            new Vertex(-0.000000, 0.707107, 0.707107),\n            new Vertex(-0.000000, 0.555570, 0.831470),\n            new Vertex(0.000000, 0.382683, 0.923880),\n            new Vertex(-0.000000, 0.195090, 0.980785),\n            new Vertex(-0.000000, 0.000000, 1.000000),\n            new Vertex(-0.000000, -0.195090, 0.980785),\n            new Vertex(0.000000, -0.382683, 0.923880),\n            new Vertex(-0.000000, -0.555570, 0.831470),\n            new Vertex(-0.000000, -0.707107, 0.707107),\n            new Vertex(-0.000000, -0.831470, 0.555570),\n            new Vertex(0.000000, -0.923880, 0.382684),\n            new Vertex(0.000000, -0.980785, 0.195091),\n            new Vertex(-0.038060, 0.980785, 0.191342),\n            new Vertex(-0.074658, 0.923880, 0.375331),\n            new Vertex(-0.108386, 0.831470, 0.544896),\n            new Vertex(-0.137950, 0.707107, 0.693520),\n            new Vertex(-0.162212, 0.555570, 0.815493),\n            new Vertex(-0.180240, 0.382683, 0.906128),\n            new Vertex(-0.191342, 0.195090, 0.961940),\n            new Vertex(-0.195090, 0.000000, 0.980786),\n            new Vertex(-0.191342, -0.195090, 0.961940),\n            new Vertex(-0.180240, -0.382683, 0.906128),\n            new Vertex(-0.162212, -0.555570, 0.815493),\n            new Vertex(-0.137950, -0.707107, 0.693520),\n            new Vertex(-0.108386, -0.831470, 0.544895),\n            new Vertex(-0.074658, -0.923880, 0.375331),\n            new Vertex(-0.038060, -0.980785, 0.191342),\n            new Vertex(-0.074658, 0.980785, 0.180240),\n            new Vertex(-0.146447, 0.923880, 0.353554),\n            new Vertex(-0.212608, 0.831470, 0.513280),\n            new Vertex(-0.270598, 0.707107, 0.653282),\n            new Vertex(-0.318190, 0.555570, 0.768178),\n            new Vertex(-0.353553, 0.382683, 0.853554),\n            new Vertex(-0.375330, 0.195090, 0.906127),\n            new Vertex(-0.382684, 0.000000, 0.923880),\n            new Vertex(-0.375330, -0.195090, 0.906127),\n            new Vertex(-0.353553, -0.382683, 0.853554),\n            new Vertex(-0.318190, -0.555570, 0.768178),\n            new Vertex(-0.270598, -0.707107, 0.653282),\n            new Vertex(-0.212608, -0.831470, 0.513280),\n            new Vertex(-0.146447, -0.923880, 0.353554),\n            new Vertex(-0.074658, -0.980785, 0.180240),\n            new Vertex(-0.108386, 0.980785, 0.162212),\n            new Vertex(-0.212608, 0.923880, 0.318190),\n            new Vertex(-0.308658, 0.831470, 0.461940),\n            new Vertex(-0.392847, 0.707107, 0.587938),\n            new Vertex(-0.461940, 0.555570, 0.691342),\n            new Vertex(-0.513280, 0.382683, 0.768178),\n            new Vertex(-0.544895, 0.195090, 0.815493),\n            new Vertex(-0.555570, 0.000000, 0.831470),\n            new Vertex(-0.544895, -0.195090, 0.815493),\n            new Vertex(-0.513280, -0.382683, 0.768178),\n            new Vertex(-0.461940, -0.555570, 0.691342),\n            new Vertex(-0.392847, -0.707107, 0.587938),\n            new Vertex(-0.308658, -0.831470, 0.461940),\n            new Vertex(-0.212607, -0.923880, 0.318190),\n            new Vertex(-0.108386, -0.980785, 0.162212),\n            new Vertex(-0.000000, 1.000000, 0.000001),\n            new Vertex(-0.137950, 0.980785, 0.137950),\n            new Vertex(-0.270598, 0.923880, 0.270598),\n            new Vertex(-0.392848, 0.831470, 0.392848),\n            new Vertex(-0.500000, 0.707107, 0.500000),\n            new Vertex(-0.587938, 0.555570, 0.587938),\n            new Vertex(-0.653281, 0.382683, 0.653282),\n            new Vertex(-0.693520, 0.195090, 0.693520),\n            new Vertex(-0.707107, 0.000000, 0.707107),\n            new Vertex(-0.693520, -0.195090, 0.693520),\n            new Vertex(-0.653281, -0.382683, 0.653282),\n            new Vertex(-0.587938, -0.555570, 0.587938),\n            new Vertex(-0.500000, -0.707107, 0.500000),\n            new Vertex(-0.392847, -0.831470, 0.392848),\n            new Vertex(-0.270598, -0.923880, 0.270598),\n            new Vertex(-0.137950, -0.980785, 0.137950),\n            new Vertex(-0.162212, 0.980785, 0.108387),\n            new Vertex(-0.318190, 0.923880, 0.212608),\n            new Vertex(-0.461940, 0.831470, 0.308659),\n            new Vertex(-0.587938, 0.707107, 0.392848),\n            new Vertex(-0.691342, 0.555570, 0.461940),\n            new Vertex(-0.768178, 0.382683, 0.513280),\n            new Vertex(-0.815493, 0.195090, 0.544895),\n            new Vertex(-0.831470, 0.000000, 0.555570),\n            new Vertex(-0.815493, -0.195090, 0.544895),\n            new Vertex(-0.768178, -0.382683, 0.513280),\n            new Vertex(-0.691342, -0.555570, 0.461940),\n            new Vertex(-0.587938, -0.707107, 0.392848),\n            new Vertex(-0.461940, -0.831470, 0.308658),\n            new Vertex(-0.318190, -0.923880, 0.212608),\n            new Vertex(-0.162212, -0.980785, 0.108387),\n            new Vertex(-0.180240, 0.980785, 0.074658),\n            new Vertex(-0.353553, 0.923880, 0.146447),\n            new Vertex(-0.513280, 0.831470, 0.212608),\n            new Vertex(-0.653281, 0.707107, 0.270598),\n            new Vertex(-0.768177, 0.555570, 0.318190),\n            new Vertex(-0.853553, 0.382683, 0.353554),\n            new Vertex(-0.906127, 0.195090, 0.375330),\n            new Vertex(-0.923880, 0.000000, 0.382684),\n            new Vertex(-0.906127, -0.195090, 0.375330),\n            new Vertex(-0.853553, -0.382683, 0.353554),\n            new Vertex(-0.768177, -0.555570, 0.318190),\n            new Vertex(-0.653281, -0.707107, 0.270598),\n            new Vertex(-0.513280, -0.831470, 0.212608),\n            new Vertex(-0.353553, -0.923880, 0.146447),\n            new Vertex(-0.180240, -0.980785, 0.074658),\n            new Vertex(-0.191342, 0.980785, 0.038061),\n            new Vertex(-0.375330, 0.923880, 0.074658),\n            new Vertex(-0.544895, 0.831470, 0.108387),\n            new Vertex(-0.693520, 0.707107, 0.137950),\n            new Vertex(-0.815493, 0.555570, 0.162212),\n            new Vertex(-0.906127, 0.382683, 0.180240),\n            new Vertex(-0.961939, 0.195090, 0.191342),\n            new Vertex(-0.980785, 0.000000, 0.195090),\n            new Vertex(-0.961939, -0.195090, 0.191342),\n            new Vertex(-0.906127, -0.382683, 0.180240),\n            new Vertex(-0.815493, -0.555570, 0.162212),\n            new Vertex(-0.693520, -0.707107, 0.137950),\n            new Vertex(-0.544895, -0.831470, 0.108387),\n            new Vertex(-0.375330, -0.923880, 0.074658),\n            new Vertex(-0.191342, -0.980785, 0.038061),\n            new Vertex(-0.195090, 0.980785, 0.000000),\n            new Vertex(-0.382683, 0.923880, 0.000000),\n            new Vertex(-0.555570, 0.831470, 0.000000),\n            new Vertex(-0.707107, 0.707107, 0.000000),\n            new Vertex(-0.831469, 0.555570, 0.000000),\n            new Vertex(-0.923879, 0.382683, 0.000000),\n            new Vertex(-0.980785, 0.195090, 0.000000),\n            new Vertex(-1.000000, 0.000000, 0.000000),\n            new Vertex(-0.980785, -0.195090, 0.000000),\n            new Vertex(-0.923879, -0.382683, 0.000000),\n            new Vertex(-0.831469, -0.555570, 0.000000),\n            new Vertex(-0.707107, -0.707107, 0.000000),\n            new Vertex(-0.555570, -0.831470, 0.000000),\n            new Vertex(-0.382683, -0.923880, 0.000000),\n            new Vertex(-0.195090, -0.980785, 0.000000),\n            new Vertex(-0.191342, 0.980785, -0.038060),\n            new Vertex(-0.375330, 0.923880, -0.074658),\n            new Vertex(-0.544895, 0.831470, -0.108386),\n            new Vertex(-0.693520, 0.707107, -0.137949),\n            new Vertex(-0.815493, 0.555570, -0.162211),\n            new Vertex(-0.906127, 0.382683, -0.180240),\n            new Vertex(-0.961939, 0.195090, -0.191342),\n            new Vertex(-0.980785, 0.000000, -0.195090),\n            new Vertex(-0.961939, -0.195090, -0.191342),\n            new Vertex(-0.906127, -0.382683, -0.180240),\n            new Vertex(-0.815493, -0.555570, -0.162211),\n            new Vertex(-0.693520, -0.707107, -0.137949),\n            new Vertex(-0.544895, -0.831470, -0.108386),\n            new Vertex(-0.375330, -0.923880, -0.074658),\n            new Vertex(-0.191342, -0.980785, -0.038060),\n            new Vertex(-0.180240, 0.980785, -0.074658),\n            new Vertex(-0.353553, 0.923880, -0.146446),\n            new Vertex(-0.513280, 0.831470, -0.212607),\n            new Vertex(-0.653281, 0.707107, -0.270598),\n            new Vertex(-0.768177, 0.555570, -0.318189),\n            new Vertex(-0.853553, 0.382683, -0.353553),\n            new Vertex(-0.906127, 0.195090, -0.375330),\n            new Vertex(-0.923879, 0.000000, -0.382683),\n            new Vertex(-0.906127, -0.195090, -0.375330),\n            new Vertex(-0.853553, -0.382683, -0.353553),\n            new Vertex(-0.768177, -0.555570, -0.318189),\n            new Vertex(-0.653281, -0.707107, -0.270598),\n            new Vertex(-0.513280, -0.831470, -0.212607),\n            new Vertex(-0.353553, -0.923880, -0.146446),\n            new Vertex(-0.180240, -0.980785, -0.074657),\n            new Vertex(-0.162212, 0.980785, -0.108386),\n            new Vertex(-0.318190, 0.923880, -0.212607),\n            new Vertex(-0.461940, 0.831470, -0.308658),\n            new Vertex(-0.587938, 0.707107, -0.392847),\n            new Vertex(-0.691341, 0.555570, -0.461939),\n            new Vertex(-0.768178, 0.382683, -0.513280),\n            new Vertex(-0.815493, 0.195090, -0.544895),\n            new Vertex(-0.831469, 0.000000, -0.555570),\n            new Vertex(-0.815493, -0.195090, -0.544895),\n            new Vertex(-0.768178, -0.382683, -0.513280),\n            new Vertex(-0.691341, -0.555570, -0.461939),\n            new Vertex(-0.587938, -0.707107, -0.392847),\n            new Vertex(-0.461940, -0.831470, -0.308658),\n            new Vertex(-0.318189, -0.923880, -0.212607),\n            new Vertex(-0.162212, -0.980785, -0.108386),\n            new Vertex(-0.137950, 0.980785, -0.137949),\n            new Vertex(-0.270598, 0.923880, -0.270598),\n            new Vertex(-0.392847, 0.831470, -0.392847),\n            new Vertex(-0.500000, 0.707107, -0.500000),\n            new Vertex(-0.587937, 0.555570, -0.587937),\n            new Vertex(-0.653281, 0.382683, -0.653281),\n            new Vertex(-0.693519, 0.195090, -0.693519),\n            new Vertex(-0.707106, 0.000000, -0.707106),\n            new Vertex(-0.693519, -0.195090, -0.693519),\n            new Vertex(-0.653281, -0.382683, -0.653281),\n            new Vertex(-0.587937, -0.555570, -0.587937),\n            new Vertex(-0.500000, -0.707107, -0.500000),\n            new Vertex(-0.392847, -0.831470, -0.392847),\n            new Vertex(-0.270598, -0.923880, -0.270598),\n            new Vertex(-0.137950, -0.980785, -0.137949),\n            new Vertex(-0.108386, 0.980785, -0.162211),\n            new Vertex(-0.212607, 0.923880, -0.318189),\n            new Vertex(-0.308658, 0.831470, -0.461939),\n            new Vertex(-0.392847, 0.707107, -0.587937),\n            new Vertex(-0.461939, 0.555570, -0.691341),\n            new Vertex(-0.513280, 0.382683, -0.768177),\n            new Vertex(-0.544895, 0.195090, -0.815492),\n            new Vertex(-0.555570, 0.000000, -0.831469),\n            new Vertex(-0.544895, -0.195090, -0.815492),\n            new Vertex(-0.513280, -0.382683, -0.768177),\n            new Vertex(-0.461939, -0.555570, -0.691341),\n            new Vertex(-0.392847, -0.707107, -0.587937),\n            new Vertex(-0.308658, -0.831470, -0.461939),\n            new Vertex(-0.212607, -0.923880, -0.318189),\n            new Vertex(-0.108386, -0.980785, -0.162211),\n            new Vertex(-0.074658, 0.980785, -0.180240),\n            new Vertex(-0.146447, 0.923880, -0.353553),\n            new Vertex(-0.212607, 0.831470, -0.513280),\n            new Vertex(-0.270598, 0.707107, -0.653281),\n            new Vertex(-0.318189, 0.555570, -0.768177),\n            new Vertex(-0.353553, 0.382683, -0.853553),\n            new Vertex(-0.375330, 0.195090, -0.906127),\n            new Vertex(-0.382683, 0.000000, -0.923879),\n            new Vertex(-0.375330, -0.195090, -0.906127),\n            new Vertex(-0.353553, -0.382683, -0.853553),\n            new Vertex(-0.318189, -0.555570, -0.768177),\n            new Vertex(-0.270598, -0.707107, -0.653281),\n            new Vertex(-0.212607, -0.831470, -0.513279),\n            new Vertex(-0.146446, -0.923880, -0.353553),\n            new Vertex(-0.074658, -0.980785, -0.180240),\n            new Vertex(-0.038060, 0.980785, -0.191342),\n            new Vertex(-0.074658, 0.923880, -0.375330),\n            new Vertex(-0.108386, 0.831470, -0.544895),\n            new Vertex(-0.137950, 0.707107, -0.693520),\n            new Vertex(-0.162211, 0.555570, -0.815492),\n            new Vertex(-0.180240, 0.382683, -0.906127),\n            new Vertex(-0.191341, 0.195090, -0.961939),\n            new Vertex(-0.195090, 0.000000, -0.980785),\n            new Vertex(-0.191341, -0.195090, -0.961939),\n            new Vertex(-0.180240, -0.382683, -0.906127),\n            new Vertex(-0.162211, -0.555570, -0.815492),\n            new Vertex(-0.137950, -0.707107, -0.693520),\n            new Vertex(-0.108386, -0.831470, -0.544895),\n            new Vertex(-0.074658, -0.923880, -0.375330),\n            new Vertex(-0.038060, -0.980785, -0.191341),\n            new Vertex(0.000000, -0.382683, -0.923879),\n            new Vertex(0.000000, -0.555570, -0.831469),\n            new Vertex(0.000000, -0.707107, -0.707106),\n            new Vertex(0.000000, -0.923880, -0.382683),\n            new Vertex(0.000000, -0.980785, -0.195090),\n        ];\n\n        mesh.faces = [\n            [4, 15, 5],\n            [9, 23, 480],\n            [5, 16, 6],\n            [480, 24, 481],\n            [6, 17, 7],\n            [0, 296, 10],\n            [205, 481, 24],\n            [7, 18, 8],\n            [0, 11, 1],\n            [8, 19, 477],\n            [2, 11, 12],\n            [477, 20, 478],\n            [2, 13, 3],\n            [478, 21, 479],\n            [3, 14, 4],\n            [479, 22, 9],\n            [21, 35, 36],\n            [13, 29, 14],\n            [21, 37, 22],\n            [14, 30, 15],\n            [22, 38, 23],\n            [15, 31, 16],\n            [23, 39, 24],\n            [16, 32, 17],\n            [10, 296, 25],\n            [205, 24, 39],\n            [18, 32, 33],\n            [10, 26, 11],\n            [19, 33, 34],\n            [11, 27, 12],\n            [19, 35, 20],\n            [12, 28, 13],\n            [205, 39, 54],\n            [32, 48, 33],\n            [25, 41, 26],\n            [33, 49, 34],\n            [26, 42, 27],\n            [35, 49, 50],\n            [27, 43, 28],\n            [36, 50, 51],\n            [28, 44, 29],\n            [36, 52, 37],\n            [29, 45, 30],\n            [37, 53, 38],\n            [31, 45, 46],\n            [38, 54, 39],\n            [31, 47, 32],\n            [25, 296, 40],\n            [51, 67, 52],\n            [44, 60, 45],\n            [52, 68, 53],\n            [45, 61, 46],\n            [53, 69, 54],\n            [47, 61, 62],\n            [40, 296, 55],\n            [205, 54, 69],\n            [47, 63, 48],\n            [40, 56, 41],\n            [48, 64, 49],\n            [41, 57, 42],\n            [50, 64, 65],\n            [42, 58, 43],\n            [50, 66, 51],\n            [43, 59, 44],\n            [55, 71, 56],\n            [63, 79, 64],\n            [56, 72, 57],\n            [65, 79, 80],\n            [57, 73, 58],\n            [65, 81, 66],\n            [59, 73, 74],\n            [67, 81, 82],\n            [59, 75, 60],\n            [68, 82, 83],\n            [60, 76, 61],\n            [68, 84, 69],\n            [62, 76, 77],\n            [55, 296, 70],\n            [205, 69, 84],\n            [62, 78, 63],\n            [74, 90, 75],\n            [83, 97, 98],\n            [76, 90, 91],\n            [83, 99, 84],\n            [76, 92, 77],\n            [70, 296, 85],\n            [205, 84, 99],\n            [77, 93, 78],\n            [70, 86, 71],\n            [78, 94, 79],\n            [71, 87, 72],\n            [80, 94, 95],\n            [72, 88, 73],\n            [81, 95, 96],\n            [74, 88, 89],\n            [81, 97, 82],\n            [93, 109, 94],\n            [86, 102, 87],\n            [95, 109, 110],\n            [88, 102, 103],\n            [96, 110, 111],\n            [88, 104, 89],\n            [96, 112, 97],\n            [89, 105, 90],\n            [97, 113, 98],\n            [91, 105, 106],\n            [99, 113, 114],\n            [91, 107, 92],\n            [85, 296, 100],\n            [205, 99, 114],\n            [92, 108, 93],\n            [85, 101, 86],\n            [113, 127, 128],\n            [106, 120, 121],\n            [114, 128, 129],\n            [106, 122, 107],\n            [100, 296, 115],\n            [205, 114, 129],\n            [108, 122, 123],\n            [100, 116, 101],\n            [108, 124, 109],\n            [101, 117, 102],\n            [110, 124, 125],\n            [102, 118, 103],\n            [110, 126, 111],\n            [103, 119, 104],\n            [112, 126, 127],\n            [104, 120, 105],\n            [116, 132, 117],\n            [125, 139, 140],\n            [117, 133, 118],\n            [125, 141, 126],\n            [119, 133, 134],\n            [127, 141, 142],\n            [119, 135, 120],\n            [127, 143, 128],\n            [121, 135, 136],\n            [129, 143, 144],\n            [121, 137, 122],\n            [115, 296, 130],\n            [205, 129, 144],\n            [122, 138, 123],\n            [116, 130, 131],\n            [123, 139, 124],\n            [136, 150, 151],\n            [143, 159, 144],\n            [136, 152, 137],\n            [130, 296, 145],\n            [205, 144, 159],\n            [137, 153, 138],\n            [130, 146, 131],\n            [138, 154, 139],\n            [132, 146, 147],\n            [140, 154, 155],\n            [132, 148, 133],\n            [140, 156, 141],\n            [133, 149, 134],\n            [141, 157, 142],\n            [134, 150, 135],\n            [143, 157, 158],\n            [155, 169, 170],\n            [147, 163, 148],\n            [155, 171, 156],\n            [149, 163, 164],\n            [157, 171, 172],\n            [149, 165, 150],\n            [157, 173, 158],\n            [151, 165, 166],\n            [158, 174, 159],\n            [151, 167, 152],\n            [145, 296, 160],\n            [205, 159, 174],\n            [153, 167, 168],\n            [145, 161, 146],\n            [153, 169, 154],\n            [146, 162, 147],\n            [174, 188, 189],\n            [166, 182, 167],\n            [160, 296, 175],\n            [205, 174, 189],\n            [167, 183, 168],\n            [160, 176, 161],\n            [168, 184, 169],\n            [161, 177, 162],\n            [169, 185, 170],\n            [162, 178, 163],\n            [170, 186, 171],\n            [163, 179, 164],\n            [172, 186, 187],\n            [164, 180, 165],\n            [172, 188, 173],\n            [166, 180, 181],\n            [185, 201, 186],\n            [179, 193, 194],\n            [187, 201, 202],\n            [179, 195, 180],\n            [187, 203, 188],\n            [181, 195, 196],\n            [189, 203, 204],\n            [181, 197, 182],\n            [175, 296, 190],\n            [205, 189, 204],\n            [183, 197, 198],\n            [175, 191, 176],\n            [183, 199, 184],\n            [176, 192, 177],\n            [185, 199, 200],\n            [178, 192, 193],\n            [190, 296, 206],\n            [205, 204, 220],\n            [197, 214, 198],\n            [190, 207, 191],\n            [198, 215, 199],\n            [192, 207, 208],\n            [200, 215, 216],\n            [192, 209, 193],\n            [200, 217, 201],\n            [193, 210, 194],\n            [202, 217, 218],\n            [194, 211, 195],\n            [202, 219, 203],\n            [196, 211, 212],\n            [203, 220, 204],\n            [196, 213, 197],\n            [209, 225, 210],\n            [217, 233, 218],\n            [210, 226, 211],\n            [218, 234, 219],\n            [212, 226, 227],\n            [220, 234, 235],\n            [212, 228, 213],\n            [206, 296, 221],\n            [205, 220, 235],\n            [213, 229, 214],\n            [206, 222, 207],\n            [214, 230, 215],\n            [207, 223, 208],\n            [216, 230, 231],\n            [208, 224, 209],\n            [216, 232, 217],\n            [228, 244, 229],\n            [221, 237, 222],\n            [229, 245, 230],\n            [223, 237, 238],\n            [231, 245, 246],\n            [224, 238, 239],\n            [231, 247, 232],\n            [224, 240, 225],\n            [233, 247, 248],\n            [225, 241, 226],\n            [233, 249, 234],\n            [227, 241, 242],\n            [235, 249, 250],\n            [227, 243, 228],\n            [221, 296, 236],\n            [205, 235, 250],\n            [247, 263, 248],\n            [240, 256, 241],\n            [248, 264, 249],\n            [242, 256, 257],\n            [249, 265, 250],\n            [242, 258, 243],\n            [236, 296, 251],\n            [205, 250, 265],\n            [243, 259, 244],\n            [236, 252, 237],\n            [244, 260, 245],\n            [237, 253, 238],\n            [246, 260, 261],\n            [239, 253, 254],\n            [246, 262, 247],\n            [240, 254, 255],\n            [251, 267, 252],\n            [259, 275, 260],\n            [252, 268, 253],\n            [261, 275, 276],\n            [254, 268, 269],\n            [261, 277, 262],\n            [255, 269, 270],\n            [262, 278, 263],\n            [255, 271, 256],\n            [264, 278, 279],\n            [257, 271, 272],\n            [265, 279, 280],\n            [257, 273, 258],\n            [251, 296, 266],\n            [205, 265, 280],\n            [259, 273, 274],\n            [270, 286, 271],\n            [278, 294, 279],\n            [272, 286, 287],\n            [280, 294, 295],\n            [272, 288, 273],\n            [266, 296, 281],\n            [205, 280, 295],\n            [273, 289, 274],\n            [266, 282, 267],\n            [274, 290, 275],\n            [267, 283, 268],\n            [276, 290, 291],\n            [268, 284, 269],\n            [276, 292, 277],\n            [270, 284, 285],\n            [278, 292, 293],\n            [289, 306, 290],\n            [282, 299, 283],\n            [291, 306, 307],\n            [284, 299, 300],\n            [291, 308, 292],\n            [285, 300, 301],\n            [292, 309, 293],\n            [285, 302, 286],\n            [293, 310, 294],\n            [287, 302, 303],\n            [294, 311, 295],\n            [288, 303, 304],\n            [281, 296, 297],\n            [205, 295, 311],\n            [288, 305, 289],\n            [281, 298, 282],\n            [310, 324, 325],\n            [303, 317, 318],\n            [310, 326, 311],\n            [303, 319, 304],\n            [297, 296, 312],\n            [205, 311, 326],\n            [304, 320, 305],\n            [297, 313, 298],\n            [305, 321, 306],\n            [298, 314, 299],\n            [307, 321, 322],\n            [300, 314, 315],\n            [307, 323, 308],\n            [301, 315, 316],\n            [308, 324, 309],\n            [301, 317, 302],\n            [322, 336, 337],\n            [315, 329, 330],\n            [323, 337, 338],\n            [316, 330, 331],\n            [323, 339, 324],\n            [316, 332, 317],\n            [325, 339, 340],\n            [318, 332, 333],\n            [326, 340, 341],\n            [318, 334, 319],\n            [312, 296, 327],\n            [205, 326, 341],\n            [319, 335, 320],\n            [312, 328, 313],\n            [320, 336, 321],\n            [313, 329, 314],\n            [340, 356, 341],\n            [333, 349, 334],\n            [327, 296, 342],\n            [205, 341, 356],\n            [334, 350, 335],\n            [328, 342, 343],\n            [335, 351, 336],\n            [328, 344, 329],\n            [337, 351, 352],\n            [330, 344, 345],\n            [337, 353, 338],\n            [331, 345, 346],\n            [338, 354, 339],\n            [331, 347, 332],\n            [340, 354, 355],\n            [333, 347, 348],\n            [345, 359, 360],\n            [352, 368, 353],\n            [345, 361, 346],\n            [354, 368, 369],\n            [346, 362, 347],\n            [355, 369, 370],\n            [348, 362, 363],\n            [355, 371, 356],\n            [348, 364, 349],\n            [342, 296, 357],\n            [205, 356, 371],\n            [350, 364, 365],\n            [343, 357, 358],\n            [350, 366, 351],\n            [343, 359, 344],\n            [352, 366, 367],\n            [363, 379, 364],\n            [357, 296, 372],\n            [205, 371, 386],\n            [365, 379, 380],\n            [358, 372, 373],\n            [365, 381, 366],\n            [358, 374, 359],\n            [367, 381, 382],\n            [360, 374, 375],\n            [367, 383, 368],\n            [361, 375, 376],\n            [368, 384, 369],\n            [361, 377, 362],\n            [370, 384, 385],\n            [363, 377, 378],\n            [370, 386, 371],\n            [382, 398, 383],\n            [375, 391, 376],\n            [383, 399, 384],\n            [376, 392, 377],\n            [385, 399, 400],\n            [378, 392, 393],\n            [385, 401, 386],\n            [378, 394, 379],\n            [372, 296, 387],\n            [205, 386, 401],\n            [379, 395, 380],\n            [372, 388, 373],\n            [380, 396, 381],\n            [373, 389, 374],\n            [382, 396, 397],\n            [375, 389, 390],\n            [387, 296, 402],\n            [205, 401, 416],\n            [395, 409, 410],\n            [387, 403, 388],\n            [395, 411, 396],\n            [389, 403, 404],\n            [397, 411, 412],\n            [390, 404, 405],\n            [397, 413, 398],\n            [391, 405, 406],\n            [398, 414, 399],\n            [391, 407, 392],\n            [400, 414, 415],\n            [393, 407, 408],\n            [400, 416, 401],\n            [393, 409, 394],\n            [406, 420, 421],\n            [413, 429, 414],\n            [406, 422, 407],\n            [414, 430, 415],\n            [408, 422, 423],\n            [415, 431, 416],\n            [408, 424, 409],\n            [402, 296, 417],\n            [205, 416, 431],\n            [410, 424, 425],\n            [402, 418, 403],\n            [410, 426, 411],\n            [403, 419, 404],\n            [412, 426, 427],\n            [404, 420, 405],\n            [412, 428, 413],\n            [424, 440, 425],\n            [417, 433, 418],\n            [425, 441, 426],\n            [418, 434, 419],\n            [427, 441, 442],\n            [419, 435, 420],\n            [427, 443, 428],\n            [421, 435, 436],\n            [429, 443, 444],\n            [421, 437, 422],\n            [429, 445, 430],\n            [423, 437, 438],\n            [430, 446, 431],\n            [424, 438, 439],\n            [417, 296, 432],\n            [205, 431, 446],\n            [443, 459, 444],\n            [436, 452, 437],\n            [444, 460, 445],\n            [438, 452, 453],\n            [445, 461, 446],\n            [438, 454, 439],\n            [432, 296, 447],\n            [205, 446, 461],\n            [439, 455, 440],\n            [433, 447, 448],\n            [440, 456, 441],\n            [434, 448, 449],\n            [442, 456, 457],\n            [435, 449, 450],\n            [442, 458, 443],\n            [436, 450, 451],\n            [455, 471, 456],\n            [448, 464, 449],\n            [457, 471, 472],\n            [449, 465, 450],\n            [457, 473, 458],\n            [451, 465, 466],\n            [458, 474, 459],\n            [451, 467, 452],\n            [459, 475, 460],\n            [453, 467, 468],\n            [461, 475, 476],\n            [453, 469, 454],\n            [447, 296, 462],\n            [205, 461, 476],\n            [454, 470, 455],\n            [447, 463, 448],\n            [474, 480, 475],\n            [468, 5, 6],\n            [475, 481, 476],\n            [469, 6, 7],\n            [462, 296, 0],\n            [205, 476, 481],\n            [469, 8, 470],\n            [463, 0, 1],\n            [470, 477, 471],\n            [464, 1, 2],\n            [472, 477, 478],\n            [465, 2, 3],\n            [472, 479, 473],\n            [466, 3, 4],\n            [473, 9, 474],\n            [467, 4, 5],\n            [4, 14, 15],\n            [9, 22, 23],\n            [5, 15, 16],\n            [480, 23, 24],\n            [6, 16, 17],\n            [7, 17, 18],\n            [0, 10, 11],\n            [8, 18, 19],\n            [2, 1, 11],\n            [477, 19, 20],\n            [2, 12, 13],\n            [478, 20, 21],\n            [3, 13, 14],\n            [479, 21, 22],\n            [21, 20, 35],\n            [13, 28, 29],\n            [21, 36, 37],\n            [14, 29, 30],\n            [22, 37, 38],\n            [15, 30, 31],\n            [23, 38, 39],\n            [16, 31, 32],\n            [18, 17, 32],\n            [10, 25, 26],\n            [19, 18, 33],\n            [11, 26, 27],\n            [19, 34, 35],\n            [12, 27, 28],\n            [32, 47, 48],\n            [25, 40, 41],\n            [33, 48, 49],\n            [26, 41, 42],\n            [35, 34, 49],\n            [27, 42, 43],\n            [36, 35, 50],\n            [28, 43, 44],\n            [36, 51, 52],\n            [29, 44, 45],\n            [37, 52, 53],\n            [31, 30, 45],\n            [38, 53, 54],\n            [31, 46, 47],\n            [51, 66, 67],\n            [44, 59, 60],\n            [52, 67, 68],\n            [45, 60, 61],\n            [53, 68, 69],\n            [47, 46, 61],\n            [47, 62, 63],\n            [40, 55, 56],\n            [48, 63, 64],\n            [41, 56, 57],\n            [50, 49, 64],\n            [42, 57, 58],\n            [50, 65, 66],\n            [43, 58, 59],\n            [55, 70, 71],\n            [63, 78, 79],\n            [56, 71, 72],\n            [65, 64, 79],\n            [57, 72, 73],\n            [65, 80, 81],\n            [59, 58, 73],\n            [67, 66, 81],\n            [59, 74, 75],\n            [68, 67, 82],\n            [60, 75, 76],\n            [68, 83, 84],\n            [62, 61, 76],\n            [62, 77, 78],\n            [74, 89, 90],\n            [83, 82, 97],\n            [76, 75, 90],\n            [83, 98, 99],\n            [76, 91, 92],\n            [77, 92, 93],\n            [70, 85, 86],\n            [78, 93, 94],\n            [71, 86, 87],\n            [80, 79, 94],\n            [72, 87, 88],\n            [81, 80, 95],\n            [74, 73, 88],\n            [81, 96, 97],\n            [93, 108, 109],\n            [86, 101, 102],\n            [95, 94, 109],\n            [88, 87, 102],\n            [96, 95, 110],\n            [88, 103, 104],\n            [96, 111, 112],\n            [89, 104, 105],\n            [97, 112, 113],\n            [91, 90, 105],\n            [99, 98, 113],\n            [91, 106, 107],\n            [92, 107, 108],\n            [85, 100, 101],\n            [113, 112, 127],\n            [106, 105, 120],\n            [114, 113, 128],\n            [106, 121, 122],\n            [108, 107, 122],\n            [100, 115, 116],\n            [108, 123, 124],\n            [101, 116, 117],\n            [110, 109, 124],\n            [102, 117, 118],\n            [110, 125, 126],\n            [103, 118, 119],\n            [112, 111, 126],\n            [104, 119, 120],\n            [116, 131, 132],\n            [125, 124, 139],\n            [117, 132, 133],\n            [125, 140, 141],\n            [119, 118, 133],\n            [127, 126, 141],\n            [119, 134, 135],\n            [127, 142, 143],\n            [121, 120, 135],\n            [129, 128, 143],\n            [121, 136, 137],\n            [122, 137, 138],\n            [116, 115, 130],\n            [123, 138, 139],\n            [136, 135, 150],\n            [143, 158, 159],\n            [136, 151, 152],\n            [137, 152, 153],\n            [130, 145, 146],\n            [138, 153, 154],\n            [132, 131, 146],\n            [140, 139, 154],\n            [132, 147, 148],\n            [140, 155, 156],\n            [133, 148, 149],\n            [141, 156, 157],\n            [134, 149, 150],\n            [143, 142, 157],\n            [155, 154, 169],\n            [147, 162, 163],\n            [155, 170, 171],\n            [149, 148, 163],\n            [157, 156, 171],\n            [149, 164, 165],\n            [157, 172, 173],\n            [151, 150, 165],\n            [158, 173, 174],\n            [151, 166, 167],\n            [153, 152, 167],\n            [145, 160, 161],\n            [153, 168, 169],\n            [146, 161, 162],\n            [174, 173, 188],\n            [166, 181, 182],\n            [167, 182, 183],\n            [160, 175, 176],\n            [168, 183, 184],\n            [161, 176, 177],\n            [169, 184, 185],\n            [162, 177, 178],\n            [170, 185, 186],\n            [163, 178, 179],\n            [172, 171, 186],\n            [164, 179, 180],\n            [172, 187, 188],\n            [166, 165, 180],\n            [185, 200, 201],\n            [179, 178, 193],\n            [187, 186, 201],\n            [179, 194, 195],\n            [187, 202, 203],\n            [181, 180, 195],\n            [189, 188, 203],\n            [181, 196, 197],\n            [183, 182, 197],\n            [175, 190, 191],\n            [183, 198, 199],\n            [176, 191, 192],\n            [185, 184, 199],\n            [178, 177, 192],\n            [197, 213, 214],\n            [190, 206, 207],\n            [198, 214, 215],\n            [192, 191, 207],\n            [200, 199, 215],\n            [192, 208, 209],\n            [200, 216, 217],\n            [193, 209, 210],\n            [202, 201, 217],\n            [194, 210, 211],\n            [202, 218, 219],\n            [196, 195, 211],\n            [203, 219, 220],\n            [196, 212, 213],\n            [209, 224, 225],\n            [217, 232, 233],\n            [210, 225, 226],\n            [218, 233, 234],\n            [212, 211, 226],\n            [220, 219, 234],\n            [212, 227, 228],\n            [213, 228, 229],\n            [206, 221, 222],\n            [214, 229, 230],\n            [207, 222, 223],\n            [216, 215, 230],\n            [208, 223, 224],\n            [216, 231, 232],\n            [228, 243, 244],\n            [221, 236, 237],\n            [229, 244, 245],\n            [223, 222, 237],\n            [231, 230, 245],\n            [224, 223, 238],\n            [231, 246, 247],\n            [224, 239, 240],\n            [233, 232, 247],\n            [225, 240, 241],\n            [233, 248, 249],\n            [227, 226, 241],\n            [235, 234, 249],\n            [227, 242, 243],\n            [247, 262, 263],\n            [240, 255, 256],\n            [248, 263, 264],\n            [242, 241, 256],\n            [249, 264, 265],\n            [242, 257, 258],\n            [243, 258, 259],\n            [236, 251, 252],\n            [244, 259, 260],\n            [237, 252, 253],\n            [246, 245, 260],\n            [239, 238, 253],\n            [246, 261, 262],\n            [240, 239, 254],\n            [251, 266, 267],\n            [259, 274, 275],\n            [252, 267, 268],\n            [261, 260, 275],\n            [254, 253, 268],\n            [261, 276, 277],\n            [255, 254, 269],\n            [262, 277, 278],\n            [255, 270, 271],\n            [264, 263, 278],\n            [257, 256, 271],\n            [265, 264, 279],\n            [257, 272, 273],\n            [259, 258, 273],\n            [270, 285, 286],\n            [278, 293, 294],\n            [272, 271, 286],\n            [280, 279, 294],\n            [272, 287, 288],\n            [273, 288, 289],\n            [266, 281, 282],\n            [274, 289, 290],\n            [267, 282, 283],\n            [276, 275, 290],\n            [268, 283, 284],\n            [276, 291, 292],\n            [270, 269, 284],\n            [278, 277, 292],\n            [289, 305, 306],\n            [282, 298, 299],\n            [291, 290, 306],\n            [284, 283, 299],\n            [291, 307, 308],\n            [285, 284, 300],\n            [292, 308, 309],\n            [285, 301, 302],\n            [293, 309, 310],\n            [287, 286, 302],\n            [294, 310, 311],\n            [288, 287, 303],\n            [288, 304, 305],\n            [281, 297, 298],\n            [310, 309, 324],\n            [303, 302, 317],\n            [310, 325, 326],\n            [303, 318, 319],\n            [304, 319, 320],\n            [297, 312, 313],\n            [305, 320, 321],\n            [298, 313, 314],\n            [307, 306, 321],\n            [300, 299, 314],\n            [307, 322, 323],\n            [301, 300, 315],\n            [308, 323, 324],\n            [301, 316, 317],\n            [322, 321, 336],\n            [315, 314, 329],\n            [323, 322, 337],\n            [316, 315, 330],\n            [323, 338, 339],\n            [316, 331, 332],\n            [325, 324, 339],\n            [318, 317, 332],\n            [326, 325, 340],\n            [318, 333, 334],\n            [319, 334, 335],\n            [312, 327, 328],\n            [320, 335, 336],\n            [313, 328, 329],\n            [340, 355, 356],\n            [333, 348, 349],\n            [334, 349, 350],\n            [328, 327, 342],\n            [335, 350, 351],\n            [328, 343, 344],\n            [337, 336, 351],\n            [330, 329, 344],\n            [337, 352, 353],\n            [331, 330, 345],\n            [338, 353, 354],\n            [331, 346, 347],\n            [340, 339, 354],\n            [333, 332, 347],\n            [345, 344, 359],\n            [352, 367, 368],\n            [345, 360, 361],\n            [354, 353, 368],\n            [346, 361, 362],\n            [355, 354, 369],\n            [348, 347, 362],\n            [355, 370, 371],\n            [348, 363, 364],\n            [350, 349, 364],\n            [343, 342, 357],\n            [350, 365, 366],\n            [343, 358, 359],\n            [352, 351, 366],\n            [363, 378, 379],\n            [365, 364, 379],\n            [358, 357, 372],\n            [365, 380, 381],\n            [358, 373, 374],\n            [367, 366, 381],\n            [360, 359, 374],\n            [367, 382, 383],\n            [361, 360, 375],\n            [368, 383, 384],\n            [361, 376, 377],\n            [370, 369, 384],\n            [363, 362, 377],\n            [370, 385, 386],\n            [382, 397, 398],\n            [375, 390, 391],\n            [383, 398, 399],\n            [376, 391, 392],\n            [385, 384, 399],\n            [378, 377, 392],\n            [385, 400, 401],\n            [378, 393, 394],\n            [379, 394, 395],\n            [372, 387, 388],\n            [380, 395, 396],\n            [373, 388, 389],\n            [382, 381, 396],\n            [375, 374, 389],\n            [395, 394, 409],\n            [387, 402, 403],\n            [395, 410, 411],\n            [389, 388, 403],\n            [397, 396, 411],\n            [390, 389, 404],\n            [397, 412, 413],\n            [391, 390, 405],\n            [398, 413, 414],\n            [391, 406, 407],\n            [400, 399, 414],\n            [393, 392, 407],\n            [400, 415, 416],\n            [393, 408, 409],\n            [406, 405, 420],\n            [413, 428, 429],\n            [406, 421, 422],\n            [414, 429, 430],\n            [408, 407, 422],\n            [415, 430, 431],\n            [408, 423, 424],\n            [410, 409, 424],\n            [402, 417, 418],\n            [410, 425, 426],\n            [403, 418, 419],\n            [412, 411, 426],\n            [404, 419, 420],\n            [412, 427, 428],\n            [424, 439, 440],\n            [417, 432, 433],\n            [425, 440, 441],\n            [418, 433, 434],\n            [427, 426, 441],\n            [419, 434, 435],\n            [427, 442, 443],\n            [421, 420, 435],\n            [429, 428, 443],\n            [421, 436, 437],\n            [429, 444, 445],\n            [423, 422, 437],\n            [430, 445, 446],\n            [424, 423, 438],\n            [443, 458, 459],\n            [436, 451, 452],\n            [444, 459, 460],\n            [438, 437, 452],\n            [445, 460, 461],\n            [438, 453, 454],\n            [439, 454, 455],\n            [433, 432, 447],\n            [440, 455, 456],\n            [434, 433, 448],\n            [442, 441, 456],\n            [435, 434, 449],\n            [442, 457, 458],\n            [436, 435, 450],\n            [455, 470, 471],\n            [448, 463, 464],\n            [457, 456, 471],\n            [449, 464, 465],\n            [457, 472, 473],\n            [451, 450, 465],\n            [458, 473, 474],\n            [451, 466, 467],\n            [459, 474, 475],\n            [453, 452, 467],\n            [461, 460, 475],\n            [453, 468, 469],\n            [454, 469, 470],\n            [447, 462, 463],\n            [474, 9, 480],\n            [468, 467, 5],\n            [475, 480, 481],\n            [469, 468, 6],\n            [469, 7, 8],\n            [463, 462, 0],\n            [470, 8, 477],\n            [464, 463, 1],\n            [472, 471, 477],\n            [465, 464, 2],\n            [472, 478, 479],\n            [466, 465, 3],\n            [473, 479, 9],\n            [467, 466, 4],\n        ]\n    }\n}\n\nmodule.exports = Sphere;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GameObject/Primitive/Sphere.js\n// module id = 16\n// module chunks = 0","const Mesh = require(\"../../Components/Mesh/Mesh\");\nconst { Vertex } = require(\"../../Mathf/Mathf\");\nconst GameObject = require(\"../GameObject\");\n\nclass Suzanne extends GameObject {\n    constructor() {\n        super()\n        /**@type {Mesh} */\n        let mesh = this.addComponent(Mesh);\n\n        mesh.verteces = [\n            new Vertex(0.437500, 0.164062, 0.765625),\n            new Vertex(-0.437500, 0.164062, 0.765625),\n            new Vertex(0.500000, 0.093750, 0.687500),\n            new Vertex(-0.500000, 0.093750, 0.687500),\n            new Vertex(0.546875, 0.054688, 0.578125),\n            new Vertex(-0.546875, 0.054688, 0.578125),\n            new Vertex(0.351562, -0.023438, 0.617188),\n            new Vertex(-0.351562, -0.023438, 0.617188),\n            new Vertex(0.351562, 0.031250, 0.718750),\n            new Vertex(-0.351562, 0.031250, 0.718750),\n            new Vertex(0.351562, 0.132812, 0.781250),\n            new Vertex(-0.351562, 0.132812, 0.781250),\n            new Vertex(0.273438, 0.164062, 0.796875),\n            new Vertex(-0.273438, 0.164062, 0.796875),\n            new Vertex(0.203125, 0.093750, 0.742188),\n            new Vertex(-0.203125, 0.093750, 0.742188),\n            new Vertex(0.156250, 0.054688, 0.648438),\n            new Vertex(-0.156250, 0.054688, 0.648438),\n            new Vertex(0.078125, 0.242188, 0.656250),\n            new Vertex(-0.078125, 0.242188, 0.656250),\n            new Vertex(0.140625, 0.242188, 0.742188),\n            new Vertex(-0.140625, 0.242188, 0.742188),\n            new Vertex(0.242188, 0.242188, 0.796875),\n            new Vertex(-0.242188, 0.242188, 0.796875),\n            new Vertex(0.273438, 0.328125, 0.796875),\n            new Vertex(-0.273438, 0.328125, 0.796875),\n            new Vertex(0.203125, 0.390625, 0.742188),\n            new Vertex(-0.203125, 0.390625, 0.742188),\n            new Vertex(0.156250, 0.437500, 0.648438),\n            new Vertex(-0.156250, 0.437500, 0.648438),\n            new Vertex(0.351562, 0.515625, 0.617188),\n            new Vertex(-0.351562, 0.515625, 0.617188),\n            new Vertex(0.351562, 0.453125, 0.718750),\n            new Vertex(-0.351562, 0.453125, 0.718750),\n            new Vertex(0.351562, 0.359375, 0.781250),\n            new Vertex(-0.351562, 0.359375, 0.781250),\n            new Vertex(0.437500, 0.328125, 0.765625),\n            new Vertex(-0.437500, 0.328125, 0.765625),\n            new Vertex(0.500000, 0.390625, 0.687500),\n            new Vertex(-0.500000, 0.390625, 0.687500),\n            new Vertex(0.546875, 0.437500, 0.578125),\n            new Vertex(-0.546875, 0.437500, 0.578125),\n            new Vertex(0.625000, 0.242188, 0.562500),\n            new Vertex(-0.625000, 0.242188, 0.562500),\n            new Vertex(0.562500, 0.242188, 0.671875),\n            new Vertex(-0.562500, 0.242188, 0.671875),\n            new Vertex(0.468750, 0.242188, 0.757812),\n            new Vertex(-0.468750, 0.242188, 0.757812),\n            new Vertex(0.476562, 0.242188, 0.773438),\n            new Vertex(-0.476562, 0.242188, 0.773438),\n            new Vertex(0.445312, 0.335938, 0.781250),\n            new Vertex(-0.445312, 0.335938, 0.781250),\n            new Vertex(0.351562, 0.375000, 0.804688),\n            new Vertex(-0.351562, 0.375000, 0.804688),\n            new Vertex(0.265625, 0.335938, 0.820312),\n            new Vertex(-0.265625, 0.335938, 0.820312),\n            new Vertex(0.226562, 0.242188, 0.820312),\n            new Vertex(-0.226562, 0.242188, 0.820312),\n            new Vertex(0.265625, 0.156250, 0.820312),\n            new Vertex(-0.265625, 0.156250, 0.820312),\n            new Vertex(0.351562, 0.242188, 0.828125),\n            new Vertex(-0.351562, 0.242188, 0.828125),\n            new Vertex(0.351562, 0.117188, 0.804688),\n            new Vertex(-0.351562, 0.117188, 0.804688),\n            new Vertex(0.445312, 0.156250, 0.781250),\n            new Vertex(-0.445312, 0.156250, 0.781250),\n            new Vertex(0.000000, 0.429688, 0.742188),\n            new Vertex(0.000000, 0.351562, 0.820312),\n            new Vertex(0.000000, -0.679688, 0.734375),\n            new Vertex(0.000000, -0.320312, 0.781250),\n            new Vertex(0.000000, -0.187500, 0.796875),\n            new Vertex(0.000000, -0.773438, 0.718750),\n            new Vertex(0.000000, 0.406250, 0.601562),\n            new Vertex(0.000000, 0.570312, 0.570312),\n            new Vertex(0.000000, 0.898438, -0.546875),\n            new Vertex(0.000000, 0.562500, -0.851562),\n            new Vertex(0.000000, 0.070312, -0.828125),\n            new Vertex(0.000000, -0.382812, -0.351562),\n            new Vertex(0.203125, -0.187500, 0.562500),\n            new Vertex(-0.203125, -0.187500, 0.562500),\n            new Vertex(0.312500, -0.437500, 0.570312),\n            new Vertex(-0.312500, -0.437500, 0.570312),\n            new Vertex(0.351562, -0.695312, 0.570312),\n            new Vertex(-0.351562, -0.695312, 0.570312),\n            new Vertex(0.367188, -0.890625, 0.531250),\n            new Vertex(-0.367188, -0.890625, 0.531250),\n            new Vertex(0.328125, -0.945312, 0.523438),\n            new Vertex(-0.328125, -0.945312, 0.523438),\n            new Vertex(0.179688, -0.968750, 0.554688),\n            new Vertex(-0.179688, -0.968750, 0.554688),\n            new Vertex(0.000000, -0.984375, 0.578125),\n            new Vertex(0.437500, -0.140625, 0.531250),\n            new Vertex(-0.437500, -0.140625, 0.531250),\n            new Vertex(0.632812, -0.039062, 0.539062),\n            new Vertex(-0.632812, -0.039062, 0.539062),\n            new Vertex(0.828125, 0.148438, 0.445312),\n            new Vertex(-0.828125, 0.148438, 0.445312),\n            new Vertex(0.859375, 0.429688, 0.593750),\n            new Vertex(-0.859375, 0.429688, 0.593750),\n            new Vertex(0.710938, 0.484375, 0.625000),\n            new Vertex(-0.710938, 0.484375, 0.625000),\n            new Vertex(0.492188, 0.601562, 0.687500),\n            new Vertex(-0.492188, 0.601562, 0.687500),\n            new Vertex(0.320312, 0.757812, 0.734375),\n            new Vertex(-0.320312, 0.757812, 0.734375),\n            new Vertex(0.156250, 0.718750, 0.757812),\n            new Vertex(-0.156250, 0.718750, 0.757812),\n            new Vertex(0.062500, 0.492188, 0.750000),\n            new Vertex(-0.062500, 0.492188, 0.750000),\n            new Vertex(0.164062, 0.414062, 0.773438),\n            new Vertex(-0.164062, 0.414062, 0.773438),\n            new Vertex(0.125000, 0.304688, 0.765625),\n            new Vertex(-0.125000, 0.304688, 0.765625),\n            new Vertex(0.203125, 0.093750, 0.742188),\n            new Vertex(-0.203125, 0.093750, 0.742188),\n            new Vertex(0.375000, 0.015625, 0.703125),\n            new Vertex(-0.375000, 0.015625, 0.703125),\n            new Vertex(0.492188, 0.062500, 0.671875),\n            new Vertex(-0.492188, 0.062500, 0.671875),\n            new Vertex(0.625000, 0.187500, 0.648438),\n            new Vertex(-0.625000, 0.187500, 0.648438),\n            new Vertex(0.640625, 0.296875, 0.648438),\n            new Vertex(-0.640625, 0.296875, 0.648438),\n            new Vertex(0.601562, 0.375000, 0.664062),\n            new Vertex(-0.601562, 0.375000, 0.664062),\n            new Vertex(0.429688, 0.437500, 0.718750),\n            new Vertex(-0.429688, 0.437500, 0.718750),\n            new Vertex(0.250000, 0.468750, 0.757812),\n            new Vertex(-0.250000, 0.468750, 0.757812),\n            new Vertex(0.000000, -0.765625, 0.734375),\n            new Vertex(0.109375, -0.718750, 0.734375),\n            new Vertex(-0.109375, -0.718750, 0.734375),\n            new Vertex(0.117188, -0.835938, 0.710938),\n            new Vertex(-0.117188, -0.835938, 0.710938),\n            new Vertex(0.062500, -0.882812, 0.695312),\n            new Vertex(-0.062500, -0.882812, 0.695312),\n            new Vertex(0.000000, -0.890625, 0.687500),\n            new Vertex(0.000000, -0.195312, 0.750000),\n            new Vertex(0.000000, -0.140625, 0.742188),\n            new Vertex(0.101562, -0.148438, 0.742188),\n            new Vertex(-0.101562, -0.148438, 0.742188),\n            new Vertex(0.125000, -0.226562, 0.750000),\n            new Vertex(-0.125000, -0.226562, 0.750000),\n            new Vertex(0.085938, -0.289062, 0.742188),\n            new Vertex(-0.085938, -0.289062, 0.742188),\n            new Vertex(0.398438, -0.046875, 0.671875),\n            new Vertex(-0.398438, -0.046875, 0.671875),\n            new Vertex(0.617188, 0.054688, 0.625000),\n            new Vertex(-0.617188, 0.054688, 0.625000),\n            new Vertex(0.726562, 0.203125, 0.601562),\n            new Vertex(-0.726562, 0.203125, 0.601562),\n            new Vertex(0.742188, 0.375000, 0.656250),\n            new Vertex(-0.742188, 0.375000, 0.656250),\n            new Vertex(0.687500, 0.414062, 0.726562),\n            new Vertex(-0.687500, 0.414062, 0.726562),\n            new Vertex(0.437500, 0.546875, 0.796875),\n            new Vertex(-0.437500, 0.546875, 0.796875),\n            new Vertex(0.312500, 0.640625, 0.835938),\n            new Vertex(-0.312500, 0.640625, 0.835938),\n            new Vertex(0.203125, 0.617188, 0.851562),\n            new Vertex(-0.203125, 0.617188, 0.851562),\n            new Vertex(0.101562, 0.429688, 0.843750),\n            new Vertex(-0.101562, 0.429688, 0.843750),\n            new Vertex(0.125000, -0.101562, 0.812500),\n            new Vertex(-0.125000, -0.101562, 0.812500),\n            new Vertex(0.210938, -0.445312, 0.710938),\n            new Vertex(-0.210938, -0.445312, 0.710938),\n            new Vertex(0.250000, -0.703125, 0.687500),\n            new Vertex(-0.250000, -0.703125, 0.687500),\n            new Vertex(0.265625, -0.820312, 0.664062),\n            new Vertex(-0.265625, -0.820312, 0.664062),\n            new Vertex(0.234375, -0.914062, 0.632812),\n            new Vertex(-0.234375, -0.914062, 0.632812),\n            new Vertex(0.164062, -0.929688, 0.632812),\n            new Vertex(-0.164062, -0.929688, 0.632812),\n            new Vertex(0.000000, -0.945312, 0.640625),\n            new Vertex(0.000000, 0.046875, 0.726562),\n            new Vertex(0.000000, 0.210938, 0.765625),\n            new Vertex(0.328125, 0.476562, 0.742188),\n            new Vertex(-0.328125, 0.476562, 0.742188),\n            new Vertex(0.164062, 0.140625, 0.750000),\n            new Vertex(-0.164062, 0.140625, 0.750000),\n            new Vertex(0.132812, 0.210938, 0.757812),\n            new Vertex(-0.132812, 0.210938, 0.757812),\n            new Vertex(0.117188, -0.687500, 0.734375),\n            new Vertex(-0.117188, -0.687500, 0.734375),\n            new Vertex(0.078125, -0.445312, 0.750000),\n            new Vertex(-0.078125, -0.445312, 0.750000),\n            new Vertex(0.000000, -0.445312, 0.750000),\n            new Vertex(0.000000, -0.328125, 0.742188),\n            new Vertex(0.093750, -0.273438, 0.781250),\n            new Vertex(-0.093750, -0.273438, 0.781250),\n            new Vertex(0.132812, -0.226562, 0.796875),\n            new Vertex(-0.132812, -0.226562, 0.796875),\n            new Vertex(0.109375, -0.132812, 0.781250),\n            new Vertex(-0.109375, -0.132812, 0.781250),\n            new Vertex(0.039062, -0.125000, 0.781250),\n            new Vertex(-0.039062, -0.125000, 0.781250),\n            new Vertex(0.000000, -0.203125, 0.828125),\n            new Vertex(0.046875, -0.148438, 0.812500),\n            new Vertex(-0.046875, -0.148438, 0.812500),\n            new Vertex(0.093750, -0.156250, 0.812500),\n            new Vertex(-0.093750, -0.156250, 0.812500),\n            new Vertex(0.109375, -0.226562, 0.828125),\n            new Vertex(-0.109375, -0.226562, 0.828125),\n            new Vertex(0.078125, -0.250000, 0.804688),\n            new Vertex(-0.078125, -0.250000, 0.804688),\n            new Vertex(0.000000, -0.289062, 0.804688),\n            new Vertex(0.257812, -0.312500, 0.554688),\n            new Vertex(-0.257812, -0.312500, 0.554688),\n            new Vertex(0.164062, -0.242188, 0.710938),\n            new Vertex(-0.164062, -0.242188, 0.710938),\n            new Vertex(0.179688, -0.312500, 0.710938),\n            new Vertex(-0.179688, -0.312500, 0.710938),\n            new Vertex(0.234375, -0.250000, 0.554688),\n            new Vertex(-0.234375, -0.250000, 0.554688),\n            new Vertex(0.000000, -0.875000, 0.687500),\n            new Vertex(0.046875, -0.867188, 0.687500),\n            new Vertex(-0.046875, -0.867188, 0.687500),\n            new Vertex(0.093750, -0.820312, 0.710938),\n            new Vertex(-0.093750, -0.820312, 0.710938),\n            new Vertex(0.093750, -0.742188, 0.726562),\n            new Vertex(-0.093750, -0.742188, 0.726562),\n            new Vertex(0.000000, -0.781250, 0.656250),\n            new Vertex(0.093750, -0.750000, 0.664062),\n            new Vertex(-0.093750, -0.750000, 0.664062),\n            new Vertex(0.093750, -0.812500, 0.640625),\n            new Vertex(-0.093750, -0.812500, 0.640625),\n            new Vertex(0.046875, -0.851562, 0.632812),\n            new Vertex(-0.046875, -0.851562, 0.632812),\n            new Vertex(0.000000, -0.859375, 0.632812),\n            new Vertex(0.171875, 0.218750, 0.781250),\n            new Vertex(-0.171875, 0.218750, 0.781250),\n            new Vertex(0.187500, 0.156250, 0.773438),\n            new Vertex(-0.187500, 0.156250, 0.773438),\n            new Vertex(0.335938, 0.429688, 0.757812),\n            new Vertex(-0.335938, 0.429688, 0.757812),\n            new Vertex(0.273438, 0.421875, 0.773438),\n            new Vertex(-0.273438, 0.421875, 0.773438),\n            new Vertex(0.421875, 0.398438, 0.773438),\n            new Vertex(-0.421875, 0.398438, 0.773438),\n            new Vertex(0.562500, 0.351562, 0.695312),\n            new Vertex(-0.562500, 0.351562, 0.695312),\n            new Vertex(0.585938, 0.289062, 0.687500),\n            new Vertex(-0.585938, 0.289062, 0.687500),\n            new Vertex(0.578125, 0.195312, 0.679688),\n            new Vertex(-0.578125, 0.195312, 0.679688),\n            new Vertex(0.476562, 0.101562, 0.718750),\n            new Vertex(-0.476562, 0.101562, 0.718750),\n            new Vertex(0.375000, 0.062500, 0.742188),\n            new Vertex(-0.375000, 0.062500, 0.742188),\n            new Vertex(0.226562, 0.109375, 0.781250),\n            new Vertex(-0.226562, 0.109375, 0.781250),\n            new Vertex(0.179688, 0.296875, 0.781250),\n            new Vertex(-0.179688, 0.296875, 0.781250),\n            new Vertex(0.210938, 0.375000, 0.781250),\n            new Vertex(-0.210938, 0.375000, 0.781250),\n            new Vertex(0.234375, 0.359375, 0.757812),\n            new Vertex(-0.234375, 0.359375, 0.757812),\n            new Vertex(0.195312, 0.296875, 0.757812),\n            new Vertex(-0.195312, 0.296875, 0.757812),\n            new Vertex(0.242188, 0.125000, 0.757812),\n            new Vertex(-0.242188, 0.125000, 0.757812),\n            new Vertex(0.375000, 0.085938, 0.726562),\n            new Vertex(-0.375000, 0.085938, 0.726562),\n            new Vertex(0.460938, 0.117188, 0.703125),\n            new Vertex(-0.460938, 0.117188, 0.703125),\n            new Vertex(0.546875, 0.210938, 0.671875),\n            new Vertex(-0.546875, 0.210938, 0.671875),\n            new Vertex(0.554688, 0.281250, 0.671875),\n            new Vertex(-0.554688, 0.281250, 0.671875),\n            new Vertex(0.531250, 0.335938, 0.679688),\n            new Vertex(-0.531250, 0.335938, 0.679688),\n            new Vertex(0.414062, 0.390625, 0.750000),\n            new Vertex(-0.414062, 0.390625, 0.750000),\n            new Vertex(0.281250, 0.398438, 0.765625),\n            new Vertex(-0.281250, 0.398438, 0.765625),\n            new Vertex(0.335938, 0.406250, 0.750000),\n            new Vertex(-0.335938, 0.406250, 0.750000),\n            new Vertex(0.203125, 0.171875, 0.750000),\n            new Vertex(-0.203125, 0.171875, 0.750000),\n            new Vertex(0.195312, 0.226562, 0.750000),\n            new Vertex(-0.195312, 0.226562, 0.750000),\n            new Vertex(0.109375, 0.460938, 0.609375),\n            new Vertex(-0.109375, 0.460938, 0.609375),\n            new Vertex(0.195312, 0.664062, 0.617188),\n            new Vertex(-0.195312, 0.664062, 0.617188),\n            new Vertex(0.335938, 0.687500, 0.593750),\n            new Vertex(-0.335938, 0.687500, 0.593750),\n            new Vertex(0.484375, 0.554688, 0.554688),\n            new Vertex(-0.484375, 0.554688, 0.554688),\n            new Vertex(0.679688, 0.453125, 0.492188),\n            new Vertex(-0.679688, 0.453125, 0.492188),\n            new Vertex(0.796875, 0.406250, 0.460938),\n            new Vertex(-0.796875, 0.406250, 0.460938),\n            new Vertex(0.773438, 0.164062, 0.375000),\n            new Vertex(-0.773438, 0.164062, 0.375000),\n            new Vertex(0.601562, 0.000000, 0.414062),\n            new Vertex(-0.601562, 0.000000, 0.414062),\n            new Vertex(0.437500, -0.093750, 0.468750),\n            new Vertex(-0.437500, -0.093750, 0.468750),\n            new Vertex(0.000000, 0.898438, 0.289062),\n            new Vertex(0.000000, 0.984375, -0.078125),\n            new Vertex(0.000000, -0.195312, -0.671875),\n            new Vertex(0.000000, -0.460938, 0.187500),\n            new Vertex(0.000000, -0.976562, 0.460938),\n            new Vertex(0.000000, -0.804688, 0.343750),\n            new Vertex(0.000000, -0.570312, 0.320312),\n            new Vertex(0.000000, -0.484375, 0.281250),\n            new Vertex(0.851562, 0.234375, 0.054688),\n            new Vertex(-0.851562, 0.234375, 0.054688),\n            new Vertex(0.859375, 0.320312, -0.046875),\n            new Vertex(-0.859375, 0.320312, -0.046875),\n            new Vertex(0.773438, 0.265625, -0.437500),\n            new Vertex(-0.773438, 0.265625, -0.437500),\n            new Vertex(0.460938, 0.437500, -0.703125),\n            new Vertex(-0.460938, 0.437500, -0.703125),\n            new Vertex(0.734375, -0.046875, 0.070312),\n            new Vertex(-0.734375, -0.046875, 0.070312),\n            new Vertex(0.593750, -0.125000, -0.164062),\n            new Vertex(-0.593750, -0.125000, -0.164062),\n            new Vertex(0.640625, -0.007812, -0.429688),\n            new Vertex(-0.640625, -0.007812, -0.429688),\n            new Vertex(0.335938, 0.054688, -0.664062),\n            new Vertex(-0.335938, 0.054688, -0.664062),\n            new Vertex(0.234375, -0.351562, 0.406250),\n            new Vertex(-0.234375, -0.351562, 0.406250),\n            new Vertex(0.179688, -0.414062, 0.257812),\n            new Vertex(-0.179688, -0.414062, 0.257812),\n            new Vertex(0.289062, -0.710938, 0.382812),\n            new Vertex(-0.289062, -0.710938, 0.382812),\n            new Vertex(0.250000, -0.500000, 0.390625),\n            new Vertex(-0.250000, -0.500000, 0.390625),\n            new Vertex(0.328125, -0.914062, 0.398438),\n            new Vertex(-0.328125, -0.914062, 0.398438),\n            new Vertex(0.140625, -0.757812, 0.367188),\n            new Vertex(-0.140625, -0.757812, 0.367188),\n            new Vertex(0.125000, -0.539062, 0.359375),\n            new Vertex(-0.125000, -0.539062, 0.359375),\n            new Vertex(0.164062, -0.945312, 0.437500),\n            new Vertex(-0.164062, -0.945312, 0.437500),\n            new Vertex(0.218750, -0.281250, 0.429688),\n            new Vertex(-0.218750, -0.281250, 0.429688),\n            new Vertex(0.210938, -0.226562, 0.468750),\n            new Vertex(-0.210938, -0.226562, 0.468750),\n            new Vertex(0.203125, -0.171875, 0.500000),\n            new Vertex(-0.203125, -0.171875, 0.500000),\n            new Vertex(0.210938, -0.390625, 0.164062),\n            new Vertex(-0.210938, -0.390625, 0.164062),\n            new Vertex(0.296875, -0.312500, -0.265625),\n            new Vertex(-0.296875, -0.312500, -0.265625),\n            new Vertex(0.343750, -0.148438, -0.539062),\n            new Vertex(-0.343750, -0.148438, -0.539062),\n            new Vertex(0.453125, 0.867188, -0.382812),\n            new Vertex(-0.453125, 0.867188, -0.382812),\n            new Vertex(0.453125, 0.929688, -0.070312),\n            new Vertex(-0.453125, 0.929688, -0.070312),\n            new Vertex(0.453125, 0.851562, 0.234375),\n            new Vertex(-0.453125, 0.851562, 0.234375),\n            new Vertex(0.460938, 0.523438, 0.429688),\n            new Vertex(-0.460938, 0.523438, 0.429688),\n            new Vertex(0.726562, 0.406250, 0.335938),\n            new Vertex(-0.726562, 0.406250, 0.335938),\n            new Vertex(0.632812, 0.453125, 0.281250),\n            new Vertex(-0.632812, 0.453125, 0.281250),\n            new Vertex(0.640625, 0.703125, 0.054688),\n            new Vertex(-0.640625, 0.703125, 0.054688),\n            new Vertex(0.796875, 0.562500, 0.125000),\n            new Vertex(-0.796875, 0.562500, 0.125000),\n            new Vertex(0.796875, 0.617188, -0.117188),\n            new Vertex(-0.796875, 0.617188, -0.117188),\n            new Vertex(0.640625, 0.750000, -0.195312),\n            new Vertex(-0.640625, 0.750000, -0.195312),\n            new Vertex(0.640625, 0.679688, -0.445312),\n            new Vertex(-0.640625, 0.679688, -0.445312),\n            new Vertex(0.796875, 0.539062, -0.359375),\n            new Vertex(-0.796875, 0.539062, -0.359375),\n            new Vertex(0.617188, 0.328125, -0.585938),\n            new Vertex(-0.617188, 0.328125, -0.585938),\n            new Vertex(0.484375, 0.023438, -0.546875),\n            new Vertex(-0.484375, 0.023438, -0.546875),\n            new Vertex(0.820312, 0.328125, -0.203125),\n            new Vertex(-0.820312, 0.328125, -0.203125),\n            new Vertex(0.406250, -0.171875, 0.148438),\n            new Vertex(-0.406250, -0.171875, 0.148438),\n            new Vertex(0.429688, -0.195312, -0.210938),\n            new Vertex(-0.429688, -0.195312, -0.210938),\n            new Vertex(0.890625, 0.406250, -0.234375),\n            new Vertex(-0.890625, 0.406250, -0.234375),\n            new Vertex(0.773438, -0.140625, -0.125000),\n            new Vertex(-0.773438, -0.140625, -0.125000),\n            new Vertex(1.039062, -0.101562, -0.328125),\n            new Vertex(-1.039062, -0.101562, -0.328125),\n            new Vertex(1.281250, 0.054688, -0.429688),\n            new Vertex(-1.281250, 0.054688, -0.429688),\n            new Vertex(1.351562, 0.320312, -0.421875),\n            new Vertex(-1.351562, 0.320312, -0.421875),\n            new Vertex(1.234375, 0.507812, -0.421875),\n            new Vertex(-1.234375, 0.507812, -0.421875),\n            new Vertex(1.023438, 0.476562, -0.312500),\n            new Vertex(-1.023438, 0.476562, -0.312500),\n            new Vertex(1.015625, 0.414062, -0.289062),\n            new Vertex(-1.015625, 0.414062, -0.289062),\n            new Vertex(1.187500, 0.437500, -0.390625),\n            new Vertex(-1.187500, 0.437500, -0.390625),\n            new Vertex(1.265625, 0.289062, -0.406250),\n            new Vertex(-1.265625, 0.289062, -0.406250),\n            new Vertex(1.210938, 0.078125, -0.406250),\n            new Vertex(-1.210938, 0.078125, -0.406250),\n            new Vertex(1.031250, -0.039062, -0.304688),\n            new Vertex(-1.031250, -0.039062, -0.304688),\n            new Vertex(0.828125, -0.070312, -0.132812),\n            new Vertex(-0.828125, -0.070312, -0.132812),\n            new Vertex(0.921875, 0.359375, -0.218750),\n            new Vertex(-0.921875, 0.359375, -0.218750),\n            new Vertex(0.945312, 0.304688, -0.289062),\n            new Vertex(-0.945312, 0.304688, -0.289062),\n            new Vertex(0.882812, -0.023438, -0.210938),\n            new Vertex(-0.882812, -0.023438, -0.210938),\n            new Vertex(1.039062, 0.000000, -0.367188),\n            new Vertex(-1.039062, 0.000000, -0.367188),\n            new Vertex(1.187500, 0.093750, -0.445312),\n            new Vertex(-1.187500, 0.093750, -0.445312),\n            new Vertex(1.234375, 0.250000, -0.445312),\n            new Vertex(-1.234375, 0.250000, -0.445312),\n            new Vertex(1.171875, 0.359375, -0.437500),\n            new Vertex(-1.171875, 0.359375, -0.437500),\n            new Vertex(1.023438, 0.343750, -0.359375),\n            new Vertex(-1.023438, 0.343750, -0.359375),\n            new Vertex(0.843750, 0.289062, -0.210938),\n            new Vertex(-0.843750, 0.289062, -0.210938),\n            new Vertex(0.835938, 0.171875, -0.273438),\n            new Vertex(-0.835938, 0.171875, -0.273438),\n            new Vertex(0.757812, 0.093750, -0.273438),\n            new Vertex(-0.757812, 0.093750, -0.273438),\n            new Vertex(0.820312, 0.085938, -0.273438),\n            new Vertex(-0.820312, 0.085938, -0.273438),\n            new Vertex(0.843750, 0.015625, -0.273438),\n            new Vertex(-0.843750, 0.015625, -0.273438),\n            new Vertex(0.812500, -0.015625, -0.273438),\n            new Vertex(-0.812500, -0.015625, -0.273438),\n            new Vertex(0.726562, 0.000000, -0.070312),\n            new Vertex(-0.726562, 0.000000, -0.070312),\n            new Vertex(0.718750, -0.023438, -0.171875),\n            new Vertex(-0.718750, -0.023438, -0.171875),\n            new Vertex(0.718750, 0.039062, -0.187500),\n            new Vertex(-0.718750, 0.039062, -0.187500),\n            new Vertex(0.796875, 0.203125, -0.210938),\n            new Vertex(-0.796875, 0.203125, -0.210938),\n            new Vertex(0.890625, 0.242188, -0.265625),\n            new Vertex(-0.890625, 0.242188, -0.265625),\n            new Vertex(0.890625, 0.234375, -0.320312),\n            new Vertex(-0.890625, 0.234375, -0.320312),\n            new Vertex(0.812500, -0.015625, -0.320312),\n            new Vertex(-0.812500, -0.015625, -0.320312),\n            new Vertex(0.851562, 0.015625, -0.320312),\n            new Vertex(-0.851562, 0.015625, -0.320312),\n            new Vertex(0.828125, 0.078125, -0.320312),\n            new Vertex(-0.828125, 0.078125, -0.320312),\n            new Vertex(0.765625, 0.093750, -0.320312),\n            new Vertex(-0.765625, 0.093750, -0.320312),\n            new Vertex(0.843750, 0.171875, -0.320312),\n            new Vertex(-0.843750, 0.171875, -0.320312),\n            new Vertex(1.039062, 0.328125, -0.414062),\n            new Vertex(-1.039062, 0.328125, -0.414062),\n            new Vertex(1.187500, 0.343750, -0.484375),\n            new Vertex(-1.187500, 0.343750, -0.484375),\n            new Vertex(1.257812, 0.242188, -0.492188),\n            new Vertex(-1.257812, 0.242188, -0.492188),\n            new Vertex(1.210938, 0.085938, -0.484375),\n            new Vertex(-1.210938, 0.085938, -0.484375),\n            new Vertex(1.046875, 0.000000, -0.421875),\n            new Vertex(-1.046875, 0.000000, -0.421875),\n            new Vertex(0.882812, -0.015625, -0.265625),\n            new Vertex(-0.882812, -0.015625, -0.265625),\n            new Vertex(0.953125, 0.289062, -0.343750),\n            new Vertex(-0.953125, 0.289062, -0.343750),\n            new Vertex(0.890625, 0.109375, -0.328125),\n            new Vertex(-0.890625, 0.109375, -0.328125),\n            new Vertex(0.937500, 0.062500, -0.335938),\n            new Vertex(-0.937500, 0.062500, -0.335938),\n            new Vertex(1.000000, 0.125000, -0.367188),\n            new Vertex(-1.000000, 0.125000, -0.367188),\n            new Vertex(0.960938, 0.171875, -0.351562),\n            new Vertex(-0.960938, 0.171875, -0.351562),\n            new Vertex(1.015625, 0.234375, -0.375000),\n            new Vertex(-1.015625, 0.234375, -0.375000),\n            new Vertex(1.054688, 0.187500, -0.382812),\n            new Vertex(-1.054688, 0.187500, -0.382812),\n            new Vertex(1.109375, 0.210938, -0.390625),\n            new Vertex(-1.109375, 0.210938, -0.390625),\n            new Vertex(1.085938, 0.273438, -0.390625),\n            new Vertex(-1.085938, 0.273438, -0.390625),\n            new Vertex(1.023438, 0.437500, -0.484375),\n            new Vertex(-1.023438, 0.437500, -0.484375),\n            new Vertex(1.250000, 0.468750, -0.546875),\n            new Vertex(-1.250000, 0.468750, -0.546875),\n            new Vertex(1.367188, 0.296875, -0.500000),\n            new Vertex(-1.367188, 0.296875, -0.500000),\n            new Vertex(1.312500, 0.054688, -0.531250),\n            new Vertex(-1.312500, 0.054688, -0.531250),\n            new Vertex(1.039062, -0.085938, -0.492188),\n            new Vertex(-1.039062, -0.085938, -0.492188),\n            new Vertex(0.789062, -0.125000, -0.328125),\n            new Vertex(-0.789062, -0.125000, -0.328125),\n            new Vertex(0.859375, 0.382812, -0.382812),\n            new Vertex(-0.859375, 0.382812, -0.382812),\n        ];\n\n        mesh.faces = [\n            [46, 2, 44],\n            [3, 47, 45],\n            [44, 4, 42],\n            [5, 45, 43],\n            [2, 6, 4],\n            [7, 3, 5],\n            [0, 8, 2],\n            [9, 1, 3],\n            [10, 14, 8],\n            [15, 11, 9],\n            [8, 16, 6],\n            [17, 9, 7],\n            [20, 16, 14],\n            [21, 17, 19],\n            [12, 20, 14],\n            [21, 13, 15],\n            [22, 26, 20],\n            [27, 23, 21],\n            [26, 18, 20],\n            [27, 19, 29],\n            [32, 28, 26],\n            [33, 29, 31],\n            [34, 26, 24],\n            [35, 27, 33],\n            [36, 32, 34],\n            [37, 33, 39],\n            [38, 30, 32],\n            [39, 31, 41],\n            [44, 40, 38],\n            [45, 41, 43],\n            [46, 38, 36],\n            [47, 39, 45],\n            [36, 48, 46],\n            [37, 49, 51],\n            [34, 50, 36],\n            [35, 51, 53],\n            [24, 52, 34],\n            [25, 53, 55],\n            [22, 54, 24],\n            [23, 55, 57],\n            [22, 58, 56],\n            [59, 23, 57],\n            [12, 62, 58],\n            [63, 13, 59],\n            [10, 64, 62],\n            [65, 11, 63],\n            [0, 48, 64],\n            [49, 1, 65],\n            [60, 64, 48],\n            [49, 65, 61],\n            [62, 64, 60],\n            [61, 65, 63],\n            [60, 58, 62],\n            [63, 59, 61],\n            [60, 56, 58],\n            [59, 57, 61],\n            [60, 54, 56],\n            [57, 55, 61],\n            [60, 52, 54],\n            [55, 53, 61],\n            [60, 50, 52],\n            [53, 51, 61],\n            [60, 48, 50],\n            [51, 49, 61],\n            [173, 90, 88],\n            [174, 90, 175],\n            [171, 88, 86],\n            [172, 89, 174],\n            [84, 171, 86],\n            [172, 85, 87],\n            [82, 169, 84],\n            [170, 83, 85],\n            [80, 167, 82],\n            [168, 81, 83],\n            [78, 145, 163],\n            [146, 79, 164],\n            [93, 145, 91],\n            [94, 146, 148],\n            [93, 149, 147],\n            [150, 94, 148],\n            [97, 149, 95],\n            [98, 150, 152],\n            [99, 151, 97],\n            [100, 152, 154],\n            [101, 153, 99],\n            [102, 154, 156],\n            [101, 157, 155],\n            [158, 102, 156],\n            [105, 157, 103],\n            [106, 158, 160],\n            [107, 159, 105],\n            [108, 160, 162],\n            [66, 161, 107],\n            [66, 162, 67],\n            [127, 161, 109],\n            [128, 162, 160],\n            [127, 157, 159],\n            [158, 128, 160],\n            [155, 178, 125],\n            [156, 179, 158],\n            [153, 125, 123],\n            [154, 126, 156],\n            [151, 123, 121],\n            [152, 124, 154],\n            [149, 121, 119],\n            [150, 122, 152],\n            [147, 119, 117],\n            [148, 120, 150],\n            [145, 117, 115],\n            [146, 118, 148],\n            [163, 115, 113],\n            [164, 116, 146],\n            [113, 176, 163],\n            [176, 114, 164],\n            [161, 111, 109],\n            [162, 112, 67],\n            [111, 177, 182],\n            [177, 112, 183],\n            [180, 177, 176],\n            [181, 177, 183],\n            [134, 175, 173],\n            [175, 135, 174],\n            [132, 173, 171],\n            [174, 133, 172],\n            [132, 169, 130],\n            [133, 170, 172],\n            [165, 184, 167],\n            [185, 166, 168],\n            [130, 167, 184],\n            [168, 131, 185],\n            [189, 186, 143],\n            [189, 187, 188],\n            [186, 68, 184],\n            [187, 68, 188],\n            [130, 68, 129],\n            [131, 68, 185],\n            [141, 190, 143],\n            [191, 142, 144],\n            [139, 192, 141],\n            [193, 140, 142],\n            [196, 139, 138],\n            [197, 140, 195],\n            [70, 138, 137],\n            [70, 138, 197],\n            [143, 69, 189],\n            [144, 69, 191],\n            [190, 207, 69],\n            [191, 207, 206],\n            [70, 199, 196],\n            [200, 70, 197],\n            [196, 201, 194],\n            [202, 197, 195],\n            [201, 192, 194],\n            [202, 193, 204],\n            [192, 205, 190],\n            [206, 193, 191],\n            [203, 199, 198],\n            [204, 200, 202],\n            [198, 205, 203],\n            [206, 198, 204],\n            [138, 163, 176],\n            [164, 138, 176],\n            [139, 210, 163],\n            [211, 140, 164],\n            [143, 210, 141],\n            [144, 211, 213],\n            [186, 212, 143],\n            [187, 213, 166],\n            [208, 165, 80],\n            [209, 166, 213],\n            [214, 212, 208],\n            [215, 213, 211],\n            [78, 210, 214],\n            [211, 79, 215],\n            [129, 221, 130],\n            [129, 222, 71],\n            [132, 221, 219],\n            [222, 133, 220],\n            [134, 219, 217],\n            [220, 135, 218],\n            [136, 217, 216],\n            [218, 136, 216],\n            [217, 230, 216],\n            [218, 230, 229],\n            [217, 226, 228],\n            [227, 218, 229],\n            [219, 224, 226],\n            [225, 220, 227],\n            [71, 224, 221],\n            [71, 225, 223],\n            [223, 228, 224],\n            [229, 223, 225],\n            [224, 228, 226],\n            [227, 229, 225],\n            [182, 233, 231],\n            [234, 183, 232],\n            [111, 231, 253],\n            [232, 112, 254],\n            [111, 255, 109],\n            [112, 256, 254],\n            [113, 233, 180],\n            [114, 234, 252],\n            [113, 249, 251],\n            [250, 114, 252],\n            [115, 247, 249],\n            [248, 116, 250],\n            [117, 245, 247],\n            [246, 118, 248],\n            [119, 243, 245],\n            [244, 120, 246],\n            [123, 243, 121],\n            [124, 244, 242],\n            [125, 241, 123],\n            [126, 242, 240],\n            [125, 235, 239],\n            [236, 126, 240],\n            [178, 237, 235],\n            [238, 179, 236],\n            [127, 255, 237],\n            [256, 128, 238],\n            [255, 275, 237],\n            [256, 276, 258],\n            [235, 275, 277],\n            [276, 236, 278],\n            [235, 273, 239],\n            [236, 274, 278],\n            [239, 271, 241],\n            [240, 272, 274],\n            [243, 271, 269],\n            [272, 244, 270],\n            [243, 267, 245],\n            [244, 268, 270],\n            [247, 267, 265],\n            [268, 248, 266],\n            [247, 263, 249],\n            [248, 264, 266],\n            [249, 261, 251],\n            [250, 262, 264],\n            [233, 261, 279],\n            [262, 234, 280],\n            [255, 259, 257],\n            [260, 256, 258],\n            [253, 281, 259],\n            [282, 254, 260],\n            [231, 279, 281],\n            [280, 232, 282],\n            [66, 283, 72],\n            [284, 66, 72],\n            [107, 285, 283],\n            [286, 108, 284],\n            [103, 285, 105],\n            [104, 286, 288],\n            [101, 287, 103],\n            [102, 288, 290],\n            [99, 289, 101],\n            [100, 290, 292],\n            [99, 293, 291],\n            [294, 100, 292],\n            [95, 293, 97],\n            [96, 294, 296],\n            [95, 297, 295],\n            [298, 96, 296],\n            [93, 299, 297],\n            [300, 94, 298],\n            [308, 337, 307],\n            [308, 338, 328],\n            [307, 335, 306],\n            [307, 336, 338],\n            [306, 339, 305],\n            [306, 340, 336],\n            [88, 305, 339],\n            [305, 89, 340],\n            [86, 339, 333],\n            [340, 87, 334],\n            [84, 333, 329],\n            [334, 85, 330],\n            [82, 329, 331],\n            [330, 83, 332],\n            [329, 337, 331],\n            [338, 330, 332],\n            [333, 335, 329],\n            [334, 336, 340],\n            [331, 327, 325],\n            [332, 328, 338],\n            [80, 331, 325],\n            [332, 81, 326],\n            [341, 214, 208],\n            [342, 215, 344],\n            [325, 208, 80],\n            [326, 209, 342],\n            [214, 345, 78],\n            [215, 346, 344],\n            [345, 91, 78],\n            [346, 92, 300],\n            [323, 303, 76],\n            [324, 303, 352],\n            [351, 77, 303],\n            [352, 77, 350],\n            [77, 347, 304],\n            [348, 77, 304],\n            [304, 327, 308],\n            [328, 304, 308],\n            [327, 341, 325],\n            [328, 342, 348],\n            [295, 317, 309],\n            [318, 296, 310],\n            [315, 76, 75],\n            [316, 76, 324],\n            [357, 302, 301],\n            [358, 302, 356],\n            [302, 353, 74],\n            [354, 302, 74],\n            [74, 315, 75],\n            [316, 74, 75],\n            [291, 361, 363],\n            [362, 292, 364],\n            [363, 367, 365],\n            [368, 364, 366],\n            [365, 369, 371],\n            [370, 366, 372],\n            [371, 375, 373],\n            [376, 372, 374],\n            [377, 375, 313],\n            [378, 376, 374],\n            [315, 373, 377],\n            [374, 316, 378],\n            [353, 371, 373],\n            [372, 354, 374],\n            [355, 365, 371],\n            [366, 356, 372],\n            [357, 363, 365],\n            [364, 358, 366],\n            [291, 359, 289],\n            [292, 360, 364],\n            [359, 301, 73],\n            [360, 301, 358],\n            [283, 287, 289],\n            [288, 284, 290],\n            [283, 359, 73],\n            [360, 284, 73],\n            [72, 283, 73],\n            [73, 284, 72],\n            [295, 361, 293],\n            [296, 362, 310],\n            [309, 367, 361],\n            [368, 310, 362],\n            [311, 369, 367],\n            [370, 312, 368],\n            [375, 381, 313],\n            [376, 382, 370],\n            [349, 383, 347],\n            [350, 384, 386],\n            [383, 319, 317],\n            [384, 320, 386],\n            [297, 383, 317],\n            [384, 298, 318],\n            [299, 341, 383],\n            [342, 300, 384],\n            [341, 347, 383],\n            [384, 348, 342],\n            [299, 345, 343],\n            [344, 346, 300],\n            [321, 377, 313],\n            [322, 378, 380],\n            [377, 323, 315],\n            [378, 324, 380],\n            [385, 321, 319],\n            [386, 322, 380],\n            [351, 385, 349],\n            [352, 386, 380],\n            [323, 379, 351],\n            [352, 380, 324],\n            [387, 401, 399],\n            [388, 402, 414],\n            [399, 403, 397],\n            [404, 400, 398],\n            [403, 395, 397],\n            [404, 396, 406],\n            [405, 393, 395],\n            [406, 394, 408],\n            [407, 391, 393],\n            [408, 392, 410],\n            [391, 411, 389],\n            [412, 392, 390],\n            [409, 417, 411],\n            [418, 410, 412],\n            [407, 419, 409],\n            [420, 408, 410],\n            [423, 407, 405],\n            [424, 408, 422],\n            [425, 405, 403],\n            [426, 406, 424],\n            [427, 403, 401],\n            [428, 404, 426],\n            [401, 415, 427],\n            [416, 402, 428],\n            [319, 441, 317],\n            [320, 442, 444],\n            [389, 443, 319],\n            [390, 444, 412],\n            [309, 441, 311],\n            [442, 310, 312],\n            [381, 413, 387],\n            [414, 382, 388],\n            [411, 439, 443],\n            [440, 412, 444],\n            [445, 439, 437],\n            [446, 440, 444],\n            [433, 437, 435],\n            [438, 434, 436],\n            [447, 433, 431],\n            [448, 434, 446],\n            [447, 449, 429],\n            [448, 450, 432],\n            [429, 415, 413],\n            [430, 416, 450],\n            [311, 429, 381],\n            [430, 312, 382],\n            [441, 447, 311],\n            [442, 448, 446],\n            [441, 443, 445],\n            [446, 444, 442],\n            [415, 451, 475],\n            [452, 416, 476],\n            [431, 451, 449],\n            [432, 452, 462],\n            [431, 459, 461],\n            [460, 432, 462],\n            [435, 459, 433],\n            [436, 460, 458],\n            [437, 457, 435],\n            [438, 458, 456],\n            [437, 453, 455],\n            [454, 438, 456],\n            [439, 473, 453],\n            [474, 440, 454],\n            [427, 475, 463],\n            [476, 428, 464],\n            [425, 463, 465],\n            [464, 426, 466],\n            [423, 465, 467],\n            [466, 424, 468],\n            [423, 469, 421],\n            [424, 470, 468],\n            [421, 471, 419],\n            [422, 472, 470],\n            [419, 473, 417],\n            [420, 474, 472],\n            [455, 477, 457],\n            [456, 478, 480],\n            [479, 483, 477],\n            [480, 484, 482],\n            [483, 487, 485],\n            [488, 484, 486],\n            [487, 491, 485],\n            [488, 492, 490],\n            [463, 485, 491],\n            [486, 464, 492],\n            [483, 475, 451],\n            [484, 476, 486],\n            [461, 483, 451],\n            [462, 484, 478],\n            [457, 461, 459],\n            [462, 458, 460],\n            [473, 455, 453],\n            [474, 456, 480],\n            [471, 479, 473],\n            [480, 472, 474],\n            [487, 471, 469],\n            [488, 472, 482],\n            [489, 469, 467],\n            [490, 470, 488],\n            [465, 489, 467],\n            [490, 466, 468],\n            [463, 491, 465],\n            [466, 492, 464],\n            [391, 503, 501],\n            [504, 392, 502],\n            [393, 501, 499],\n            [502, 394, 500],\n            [393, 497, 395],\n            [394, 498, 500],\n            [395, 495, 397],\n            [396, 496, 498],\n            [397, 493, 399],\n            [398, 494, 496],\n            [399, 505, 387],\n            [400, 506, 494],\n            [501, 505, 493],\n            [502, 506, 504],\n            [493, 499, 501],\n            [500, 494, 502],\n            [495, 497, 499],\n            [500, 498, 496],\n            [381, 505, 313],\n            [382, 506, 388],\n            [313, 503, 321],\n            [504, 314, 322],\n            [319, 503, 389],\n            [504, 320, 390],\n            [46, 0, 2],\n            [3, 1, 47],\n            [44, 2, 4],\n            [5, 3, 45],\n            [2, 8, 6],\n            [7, 9, 3],\n            [0, 10, 8],\n            [9, 11, 1],\n            [10, 12, 14],\n            [15, 13, 11],\n            [8, 14, 16],\n            [17, 15, 9],\n            [20, 18, 16],\n            [21, 15, 17],\n            [12, 22, 20],\n            [21, 23, 13],\n            [22, 24, 26],\n            [27, 25, 23],\n            [26, 28, 18],\n            [27, 21, 19],\n            [32, 30, 28],\n            [33, 27, 29],\n            [34, 32, 26],\n            [35, 25, 27],\n            [36, 38, 32],\n            [37, 35, 33],\n            [38, 40, 30],\n            [39, 33, 31],\n            [44, 42, 40],\n            [45, 39, 41],\n            [46, 44, 38],\n            [47, 37, 39],\n            [36, 50, 48],\n            [37, 47, 49],\n            [34, 52, 50],\n            [35, 37, 51],\n            [24, 54, 52],\n            [25, 35, 53],\n            [22, 56, 54],\n            [23, 25, 55],\n            [22, 12, 58],\n            [59, 13, 23],\n            [12, 10, 62],\n            [63, 11, 13],\n            [10, 0, 64],\n            [65, 1, 11],\n            [0, 46, 48],\n            [49, 47, 1],\n            [173, 175, 90],\n            [174, 89, 90],\n            [171, 173, 88],\n            [172, 87, 89],\n            [84, 169, 171],\n            [172, 170, 85],\n            [82, 167, 169],\n            [170, 168, 83],\n            [80, 165, 167],\n            [168, 166, 81],\n            [78, 91, 145],\n            [146, 92, 79],\n            [93, 147, 145],\n            [94, 92, 146],\n            [93, 95, 149],\n            [150, 96, 94],\n            [97, 151, 149],\n            [98, 96, 150],\n            [99, 153, 151],\n            [100, 98, 152],\n            [101, 155, 153],\n            [102, 100, 154],\n            [101, 103, 157],\n            [158, 104, 102],\n            [105, 159, 157],\n            [106, 104, 158],\n            [107, 161, 159],\n            [108, 106, 160],\n            [66, 67, 161],\n            [66, 108, 162],\n            [127, 159, 161],\n            [128, 110, 162],\n            [127, 178, 157],\n            [158, 179, 128],\n            [155, 157, 178],\n            [156, 126, 179],\n            [153, 155, 125],\n            [154, 124, 126],\n            [151, 153, 123],\n            [152, 122, 124],\n            [149, 151, 121],\n            [150, 120, 122],\n            [147, 149, 119],\n            [148, 118, 120],\n            [145, 147, 117],\n            [146, 116, 118],\n            [163, 145, 115],\n            [164, 114, 116],\n            [113, 180, 176],\n            [176, 181, 114],\n            [161, 67, 111],\n            [162, 110, 112],\n            [111, 67, 177],\n            [177, 67, 112],\n            [180, 182, 177],\n            [181, 176, 177],\n            [134, 136, 175],\n            [175, 136, 135],\n            [132, 134, 173],\n            [174, 135, 133],\n            [132, 171, 169],\n            [133, 131, 170],\n            [165, 186, 184],\n            [185, 187, 166],\n            [130, 169, 167],\n            [168, 170, 131],\n            [189, 188, 186],\n            [189, 144, 187],\n            [186, 188, 68],\n            [187, 185, 68],\n            [130, 184, 68],\n            [131, 129, 68],\n            [141, 192, 190],\n            [191, 193, 142],\n            [139, 194, 192],\n            [193, 195, 140],\n            [196, 194, 139],\n            [197, 138, 140],\n            [70, 196, 138],\n            [70, 137, 138],\n            [143, 190, 69],\n            [144, 189, 69],\n            [190, 205, 207],\n            [191, 69, 207],\n            [70, 198, 199],\n            [200, 198, 70],\n            [196, 199, 201],\n            [202, 200, 197],\n            [201, 203, 192],\n            [202, 195, 193],\n            [192, 203, 205],\n            [206, 204, 193],\n            [203, 201, 199],\n            [204, 198, 200],\n            [198, 207, 205],\n            [206, 207, 198],\n            [138, 139, 163],\n            [164, 140, 138],\n            [139, 141, 210],\n            [211, 142, 140],\n            [143, 212, 210],\n            [144, 142, 211],\n            [186, 165, 212],\n            [187, 144, 213],\n            [208, 212, 165],\n            [209, 81, 166],\n            [214, 210, 212],\n            [215, 209, 213],\n            [78, 163, 210],\n            [211, 164, 79],\n            [129, 71, 221],\n            [129, 131, 222],\n            [132, 130, 221],\n            [222, 131, 133],\n            [134, 132, 219],\n            [220, 133, 135],\n            [136, 134, 217],\n            [218, 135, 136],\n            [217, 228, 230],\n            [218, 216, 230],\n            [217, 219, 226],\n            [227, 220, 218],\n            [219, 221, 224],\n            [225, 222, 220],\n            [71, 223, 224],\n            [71, 222, 225],\n            [223, 230, 228],\n            [229, 230, 223],\n            [182, 180, 233],\n            [234, 181, 183],\n            [111, 182, 231],\n            [232, 183, 112],\n            [111, 253, 255],\n            [112, 110, 256],\n            [113, 251, 233],\n            [114, 181, 234],\n            [113, 115, 249],\n            [250, 116, 114],\n            [115, 117, 247],\n            [248, 118, 116],\n            [117, 119, 245],\n            [246, 120, 118],\n            [119, 121, 243],\n            [244, 122, 120],\n            [123, 241, 243],\n            [124, 122, 244],\n            [125, 239, 241],\n            [126, 124, 242],\n            [125, 178, 235],\n            [236, 179, 126],\n            [178, 127, 237],\n            [238, 128, 179],\n            [127, 109, 255],\n            [256, 110, 128],\n            [255, 257, 275],\n            [256, 238, 276],\n            [235, 237, 275],\n            [276, 238, 236],\n            [235, 277, 273],\n            [236, 240, 274],\n            [239, 273, 271],\n            [240, 242, 272],\n            [243, 241, 271],\n            [272, 242, 244],\n            [243, 269, 267],\n            [244, 246, 268],\n            [247, 245, 267],\n            [268, 246, 248],\n            [247, 265, 263],\n            [248, 250, 264],\n            [249, 263, 261],\n            [250, 252, 262],\n            [233, 251, 261],\n            [262, 252, 234],\n            [255, 253, 259],\n            [260, 254, 256],\n            [253, 231, 281],\n            [282, 232, 254],\n            [231, 233, 279],\n            [280, 234, 232],\n            [66, 107, 283],\n            [284, 108, 66],\n            [107, 105, 285],\n            [286, 106, 108],\n            [103, 287, 285],\n            [104, 106, 286],\n            [101, 289, 287],\n            [102, 104, 288],\n            [99, 291, 289],\n            [100, 102, 290],\n            [99, 97, 293],\n            [294, 98, 100],\n            [95, 295, 293],\n            [96, 98, 294],\n            [95, 93, 297],\n            [298, 94, 96],\n            [93, 91, 299],\n            [300, 92, 94],\n            [308, 327, 337],\n            [308, 307, 338],\n            [307, 337, 335],\n            [307, 306, 336],\n            [306, 335, 339],\n            [306, 305, 340],\n            [88, 90, 305],\n            [305, 90, 89],\n            [86, 88, 339],\n            [340, 89, 87],\n            [84, 86, 333],\n            [334, 87, 85],\n            [82, 84, 329],\n            [330, 85, 83],\n            [329, 335, 337],\n            [338, 336, 330],\n            [333, 339, 335],\n            [334, 330, 336],\n            [331, 337, 327],\n            [332, 326, 328],\n            [80, 82, 331],\n            [332, 83, 81],\n            [341, 343, 214],\n            [342, 209, 215],\n            [325, 341, 208],\n            [326, 81, 209],\n            [214, 343, 345],\n            [215, 79, 346],\n            [345, 299, 91],\n            [346, 79, 92],\n            [323, 351, 303],\n            [324, 76, 303],\n            [351, 349, 77],\n            [352, 303, 77],\n            [77, 349, 347],\n            [348, 350, 77],\n            [304, 347, 327],\n            [328, 348, 304],\n            [327, 347, 341],\n            [328, 326, 342],\n            [295, 297, 317],\n            [318, 298, 296],\n            [315, 323, 76],\n            [316, 75, 76],\n            [357, 355, 302],\n            [358, 301, 302],\n            [302, 355, 353],\n            [354, 356, 302],\n            [74, 353, 315],\n            [316, 354, 74],\n            [291, 293, 361],\n            [362, 294, 292],\n            [363, 361, 367],\n            [368, 362, 364],\n            [365, 367, 369],\n            [370, 368, 366],\n            [371, 369, 375],\n            [376, 370, 372],\n            [377, 373, 375],\n            [378, 314, 376],\n            [315, 353, 373],\n            [374, 354, 316],\n            [353, 355, 371],\n            [372, 356, 354],\n            [355, 357, 365],\n            [366, 358, 356],\n            [357, 359, 363],\n            [364, 360, 358],\n            [291, 363, 359],\n            [292, 290, 360],\n            [359, 357, 301],\n            [360, 73, 301],\n            [283, 285, 287],\n            [288, 286, 284],\n            [283, 289, 359],\n            [360, 290, 284],\n            [295, 309, 361],\n            [296, 294, 362],\n            [309, 311, 367],\n            [368, 312, 310],\n            [311, 381, 369],\n            [370, 382, 312],\n            [375, 369, 381],\n            [376, 314, 382],\n            [349, 385, 383],\n            [350, 348, 384],\n            [383, 385, 319],\n            [384, 318, 320],\n            [297, 299, 383],\n            [384, 300, 298],\n            [299, 343, 341],\n            [342, 344, 300],\n            [321, 379, 377],\n            [322, 314, 378],\n            [377, 379, 323],\n            [378, 316, 324],\n            [385, 379, 321],\n            [386, 320, 322],\n            [351, 379, 385],\n            [352, 350, 386],\n            [387, 413, 401],\n            [388, 400, 402],\n            [399, 401, 403],\n            [404, 402, 400],\n            [403, 405, 395],\n            [404, 398, 396],\n            [405, 407, 393],\n            [406, 396, 394],\n            [407, 409, 391],\n            [408, 394, 392],\n            [391, 409, 411],\n            [412, 410, 392],\n            [409, 419, 417],\n            [418, 420, 410],\n            [407, 421, 419],\n            [420, 422, 408],\n            [423, 421, 407],\n            [424, 406, 408],\n            [425, 423, 405],\n            [426, 404, 406],\n            [427, 425, 403],\n            [428, 402, 404],\n            [401, 413, 415],\n            [416, 414, 402],\n            [319, 443, 441],\n            [320, 318, 442],\n            [389, 411, 443],\n            [390, 320, 444],\n            [309, 317, 441],\n            [442, 318, 310],\n            [381, 429, 413],\n            [414, 430, 382],\n            [411, 417, 439],\n            [440, 418, 412],\n            [445, 443, 439],\n            [446, 438, 440],\n            [433, 445, 437],\n            [438, 446, 434],\n            [447, 445, 433],\n            [448, 432, 434],\n            [447, 431, 449],\n            [448, 430, 450],\n            [429, 449, 415],\n            [430, 414, 416],\n            [311, 447, 429],\n            [430, 448, 312],\n            [441, 445, 447],\n            [442, 312, 448],\n            [415, 449, 451],\n            [452, 450, 416],\n            [431, 461, 451],\n            [432, 450, 452],\n            [431, 433, 459],\n            [460, 434, 432],\n            [435, 457, 459],\n            [436, 434, 460],\n            [437, 455, 457],\n            [438, 436, 458],\n            [437, 439, 453],\n            [454, 440, 438],\n            [439, 417, 473],\n            [474, 418, 440],\n            [427, 415, 475],\n            [476, 416, 428],\n            [425, 427, 463],\n            [464, 428, 426],\n            [423, 425, 465],\n            [466, 426, 424],\n            [423, 467, 469],\n            [424, 422, 470],\n            [421, 469, 471],\n            [422, 420, 472],\n            [419, 471, 473],\n            [420, 418, 474],\n            [455, 479, 477],\n            [456, 458, 478],\n            [479, 481, 483],\n            [480, 478, 484],\n            [483, 481, 487],\n            [488, 482, 484],\n            [487, 489, 491],\n            [488, 486, 492],\n            [463, 475, 485],\n            [486, 476, 464],\n            [483, 485, 475],\n            [484, 452, 476],\n            [461, 477, 483],\n            [462, 452, 484],\n            [457, 477, 461],\n            [462, 478, 458],\n            [473, 479, 455],\n            [474, 454, 456],\n            [471, 481, 479],\n            [480, 482, 472],\n            [487, 481, 471],\n            [488, 470, 472],\n            [489, 487, 469],\n            [490, 468, 470],\n            [465, 491, 489],\n            [490, 492, 466],\n            [391, 389, 503],\n            [504, 390, 392],\n            [393, 391, 501],\n            [502, 392, 394],\n            [393, 499, 497],\n            [394, 396, 498],\n            [395, 497, 495],\n            [396, 398, 496],\n            [397, 495, 493],\n            [398, 400, 494],\n            [399, 493, 505],\n            [400, 388, 506],\n            [501, 503, 505],\n            [502, 494, 506],\n            [493, 495, 499],\n            [500, 496, 494],\n            [381, 387, 505],\n            [382, 314, 506],\n            [313, 505, 503],\n            [504, 506, 314],\n            [319, 321, 503],\n            [504, 322, 320],\n        ]\n    }\n}\n\nmodule.exports = Suzanne;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GameObject/Primitive/Suzanne.js\n// module id = 17\n// module chunks = 0","const Behaviour = require(\"./Behaviour/Behaviour\");\nconst Camera = require(\"./Camera/Camera\");\nconst Render = require(\"./Render/Render\");\nconst Scene = require(\"./Scene/Scene\");\nconst Screen = require(\"./System/Screen\");\n\nclass iso2d {\n    constructor(canvas, camera, scene) {\n        this._canvas = canvas || null;\n        this._scene = scene || new Scene(this);\n        this._camera = camera || new Camera(this);\n        this._screeen = screen || new Screen(this);\n        this._render = new Render(this);\n        this._behaviours = [];\n    }\n\n    /** @returns {Camera} */\n    get camera() {\n        return this._camera;\n    }\n\n    /** @param {Camera} camera */\n    set camera(camera) {\n        this._camera = camera;\n    }\n\n    /** @returns {Scene} */\n    get scene() {\n        return this._scene;\n    }\n\n    /** @param {Scene} scene */\n    set scene(scene) {\n        this._scene = scene;\n    }\n\n    /** @returns {Render} */\n    get render() {\n        return this._render;\n    }\n\n    /** @param {Behaviour} behaviour */\n    addBehaviour(behaviour) {\n        if (behaviour.__proto__.name !== \"Behaviour\") {\n            return null;\n        }\n\n        behaviour = new behaviour(this._scene);\n\n        this._behaviours.push(behaviour);\n    }\n\n    start() {\n        for (let bh of this._behaviours) {\n            bh.start();\n        }\n\n        window.requestAnimationFrame(() => {\n            this.tick();\n        });\n    }\n\n    tick() {\n        for (let gm of this.scene.gameObjects) {\n            for (let component of gm.allComponents()) {\n                component.onUpdate(this);\n                component.onDraw(this);\n            };\n        }\n\n        this.render.render();\n        window.requestAnimationFrame(() => {\n            this.tick();\n        })\n    }\n}\n\nmodule.exports = iso2d;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/iso2d.js\n// module id = 18\n// module chunks = 0","class Behaviour {\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    start() {\n\n    }\n\n    update() {\n\n    }\n}\n\nmodule.exports = Behaviour;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Behaviour/Behaviour.js\n// module id = 19\n// module chunks = 0","const GameObject = require(\"../GameObject/GameObject\");\nclass Scene {\n    constructor(core) {\n        this._core = core;\n        this._gameObjects = [];\n        this._lights = [];\n    }\n\n    get core () {\n        return this._core;\n    }\n\n    /** @returns {GameObject[]} */\n    get gameObjects() {\n        return this._gameObjects;\n    }\n\n    get lights () {\n        return this._lights;\n    }\n\n    /** @param {GameObject} gameObject */\n    addGameObject(gameObject) {\n        this.gameObjects.push(gameObject);\n\n        return gameObject;\n    }\n\n\n    /** @returns {GameObject[]} */\n    allGameObjects() {\n        return this.gameObjects;\n    }\n\n    \n    addLight(light) {\n        this.lights.push(light);\n    }\n\n    allLights() {\n        return this.lights;\n    }\n}\n\nmodule.exports = Scene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Scene/Scene.js\n// module id = 20\n// module chunks = 0","class Screen {\n    constructor(core) {\n        this._core = core;\n        this._width = document.body.clientWidth;\n        this._height = document.body.clientHeight;\n\n        document.addEventListener('resize', e => {\n            this._width = document.body.clientWidth;\n            this._height = document.body.clientHeight;\n        });\n    }\n}\n\nmodule.exports = Screen;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/Screen.js\n// module id = 21\n// module chunks = 0","const RGBA = require(\"../Color/RGBA\");\r\nclass Bitmap {\r\n    /** @param {ImageData} imageData */\r\n    constructor(imageData) {\r\n        this._bitmap = imageData;\r\n        this._w = imageData.width;\r\n        this._h = imageData.height;\r\n    }\r\n\r\n    get bitmap () {\r\n        return this._bitmap;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x {Number} \r\n     * @param y {Number} \r\n     * @param color {RGBA};\r\n     */\r\n    set(x, y, color) {\r\n        x = parseInt(x);\r\n        y = parseInt(y);\r\n\r\n        var i = (x + y * this._w) * 4\r\n        \r\n        this.bitmap.data[i + 0] = color.r;\r\n        this.bitmap.data[i + 1] = color.g;\r\n        this.bitmap.data[i + 2] = color.b;\r\n        this.bitmap.data[i + 3] = color.a;\r\n    }\r\n\r\n    get() {\r\n        return this.bitmap;\r\n    }\r\n}\r\n\r\nmodule.exports = Bitmap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Render/Bitmap.js\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}